---
title: "Dimensional Data"
author: "Jerome Dixon"
execute: 
  eval: false
format: 
  html: 
    link-external-icon: true
    link-external-newwindow: true
    toc: true
    toc-depth: 5
    code-fold: true
    code-summary: "Show the code"
    embed-resources: true
    default-image-extension: svg
    dpi: 600
    theme: cosmo
---

```{r}

library(reticulate)
library(here)
library(readr)
library(dplyr)
library(magrittr)
library(stringr)
library(tidyr)
library(keras3)

```


### DSS/FLIS Dimensional Data Checks For Missing Data

1.  Identify Missing Dimensional Data
    1.  Check Unit_Pallet_Weight_Deciphered not NA and not '0' ({missing1})
    2.  Check Unit_Pallet_Cube_Deciphered not NA and not '0' ({missing1})
2.  Check DSS/FLIS for missing data ({missing2})
    1.  Update with DSS/FLIS values
3.  Build ML model to impute missing dimensional data
    -   Keras deep learning library
4.  Validate/update with IHS Haystack/Engineering Work Bench (EWB).
    -   Find technical drawings for same or like material to populate/derive dimension and weight data

### Step 1 - Missing Data

- Filter cosix_long for where \['UNIT_PACK_WEIGHT_DECIPHERED', 'UNIT_PACK_CUBE_DECIPHERED'\] is not NA or equal to '0'


#### Class IX Dataframe

```{python}

import pandas as pd
import numpy as np


# Define the schema for the Class IX data
schema = {
        'Class_of_Supply': 'str',
        'Region': 'str',
        'SECREP Flag': 'bool',
        'Battery Flag': 'bool',
        'MEF': 'str',
        'FIE': 'str',
        'Location_Name': 'str',
        'TAMCN_NIIN': 'str',
        'TAMCN_of_End_Item_left': 'str',
        'NIIN_of_End_Item': 'str',
        'Colloquial Name_left': 'str',
        'FSC of Part Required': 'str',
        'NIIN': 'str',
        'Nomenclature': 'str',
        'UI': 'str',
        'Unit_Price_left': 'float64',
        'Required_FIE': 'int64',
        'Required_POS1': 'int64',
        'Required_POS2': 'int64',
        'Required_POS3': 'int64',
        'Required_BEYOND': 'int64',
        'Total_Required_Less_FIE': 'float64',
        'Total_Required_Selected_Confidence': 'float64',
        'Value_FIE': 'float64',
        'Value_POS1': 'float64',
        'Value_POS2': 'float64',
        'Value_POS3': 'float64',
        'Value_BEYOND': 'float64',
        'Total_Value_Less_FIE': 'float64',
        'Total_Value_Selected_Confidence': 'float64',
        'IND STON': 'float64',
        'IND SQFT': 'float64',
        'DSS_WEIGHT': 'float64',
        'DSS_CUBE': 'float64',
        'DIM LENGTH INCHES': 'float64',
        'DIM WIDTH INCHES': 'float64',
        'DIM HEIGHT INCHES': 'float64'
    }
    
# Load the Class IX data with the specified schema    
df1 = pd.read_csv("C:/Projects/quicksight-dashboard-automation/setup/datasets/embark/embark_cos/RD_IX_Requirement_Trimmed.csv", dtype=schema)



# Select columns to keep
columns_to_keep = [
        "Class_of_Supply", "Region", "MEF", "FIE", "Location Name",
        'SECREP Flag', 'Battery Flag',
        "TAMCN_NIIN", "TAMCN_of_End_Item", "NIIN_of_End_Item", "COLLOQUIAL_NAME",
        "TAMCN_NIIN_QTY_FIE", "TAMCN_NIIN_QTY_POS1", "TAMCN_NIIN_QTY_POS2", "TAMCN_NIIN_QTY_POS3",
        "TAMCN_NIIN_QTY_BEYOND", "FSC of Part Required", "NIIN of Part Required",
        "Nomenclature of Part Required", "UNIT_OF_ISSUE",
        "STANDARD UNIT PRICE", "Required_FIE", "Required_POS1", "Required_POS2", "Required_POS3",
        "Required_BEYOND", "Total_Required_Less_FIE", "Total_Required_Selected_Confidence",
        "Value_FIE", "Value_POS1", "Value_POS2", "Value_POS3", "Value_BEYOND",
        "Total_Value_Less_FIE", "Total_Value_Selected_Confidence", "IND STON", "IND SQFT",
        "DIM LENGTH INCHES", "DIM WIDTH INCHES", "DIM HEIGHT INCHES"
    ]

df1 = df1[columns_to_keep]


# Rename columns for consistency and clarity
rename_dict1 = {
        'REGION': 'Region',
        'COLLOQUIAL_NAME':'Colloquial_Name',
        'Location Name': 'Location_Name',
        'UNIT_OF_ISSUE': 'UI',
        'STANDARD UNIT PRICE': 'Unit_Price',
        "Value_FIE": "Cost_FIE",
        "Value_POS1": "Cost_POS1",
        "Value_POS2": "Cost_POS2",
        "Value_POS3": "Cost_POS3",
        "Value_BEYOND": "Cost_BEYOND",
        'Nomenclature of Part Required': 'Nomenclature',
        'NIIN of Part Required': 'NIIN'
    }

df1.rename(columns=rename_dict1, inplace=True)


```

#### Class IX NIINs

```{python}

# Get unique NIINs from the Class IX data as list
classix_niins = df1['NIIN'].unique().tolist()

len(classix_niins)

```

#### Athena FLIS Query

```{python eval=FALSE}

import boto3
import time
import csv
import os
from datetime import datetime

# Generate timestamp
timestamp = datetime.now().strftime('%Y%m%d_%H%M%S')

# Create timestamped filename and save to environmental variable
timestamped_filename = f'query_results_{timestamp}.csv'
os.environ['TIMESTAMPED_FILENAME'] = timestamped_filename


aws_profile = 'quicksight'
region = 'us-east-1'
session = boto3.Session(profile_name=aws_profile, region_name=region)
athena_client = session.client('athena')
s3_bucket = 'webflis-query-results'
s3_output = 's3://webflis-query-results/'
database = 'flis'


# Function to run Athena query
def run_athena_query(query, database):
    response = athena_client.start_query_execution(
        QueryString=query,
        QueryExecutionContext={'Database': database},
        ResultConfiguration={'OutputLocation': s3_output}
    )
    query_execution_id = response['QueryExecutionId']

    while True:
        query_status = athena_client.get_query_execution(QueryExecutionId=query_execution_id)
        status = query_status['QueryExecution']['Status']['State']
        if status in ['SUCCEEDED', 'FAILED', 'CANCELLED']:
            break
        time.sleep(5)

    if status == 'SUCCEEDED':
        return query_execution_id
    else:
        raise Exception(f"Query failed with status: {status}")


# Function to process paginated results
def process_results(query_execution_id):
    results = []
    response = athena_client.get_query_results(QueryExecutionId=query_execution_id)
    headers = [col['Label'] for col in response['ResultSet']['ResultSetMetadata']['ColumnInfo']]

    # Process each row
    while True:
        for row in response['ResultSet']['Rows'][1:]:  # Skip the header row on the first page
            results.append(dict(zip(headers, [field.get('VarCharValue', '') for field in row['Data']])))
        # Check for more pages
        if 'NextToken' in response:
            response = athena_client.get_query_results(QueryExecutionId=query_execution_id, NextToken=response['NextToken'])
        else:
            break
    return results


# Read NIINs from a CSV file
def read_niins_from_csv(file_path):
    with open(file_path, 'r') as file:
        reader = csv.reader(file)
        return [row[0] for row in reader]


# Main function
def process_niins():
    query = f"""
    SELECT 
      niin,
      array_join(array_agg(DISTINCT part_number), ', ') AS part_number,
      array_join(array_agg(DISTINCT cage_code), ', ') AS cage_code,
      array_join(array_agg(parent_cage), ', ') AS parent_cage,
      array_join(array_agg(company_name), ', ') AS company_name,
      array_join(array_agg(CAST(dss_weight AS VARCHAR)), ', ') AS dss_weight,
      array_join(array_agg(CAST(dss_cube AS VARCHAR)), ', ') AS dss_cube,
      array_join(array_agg(CAST(unpkg_item_weight AS VARCHAR)), ', ') AS unpkg_item_weight,
      array_join(array_agg(unpkg_item_dim), ', ') AS unpkg_item_dim,
      array_join(array_agg(CAST(unit_pack_weight AS VARCHAR)), ', ') AS unit_pack_weight,
      array_join(array_agg(unit_pack_dim), ', ') AS unit_pack_dim,
      array_join(array_agg(CAST(unit_pack_cube AS VARCHAR)), ', ') AS unit_pack_cube
    FROM 
      flis.webflis_dimensional_data
    WHERE 
      niin IN ('015949897', '015949892', '015841859', '014637915', '015807142', '015778908', '015778915',
      '015835717', '015840674', '015840728', '016038788', '016435139', '016782679', '016782783', '016782800',
      '251494725', '015009194', '015670999', '015676506', '015671158', '012330880', '015503498', '015507280',
      '015665266', '015724181', '015522309', '015522317', '015662049', '015671477', '015673463', '015676143',
      '015520940', '015672573', '015664258', '015286650', '015522745', '015674003', '015674018', '015665397',
      '015677659', '015671320', '015537958', '015537229', '015537262', '015099371', '015124284', '013397873',
      '015664334', '015664354', '002036406', '013288545', '013355961', '015666427', '015667394', '015671515',
      '013299729', '015672896', '015673060', '015674873', '015675404', '015675930', '015678538', '013308490',
      '013371978', '014701384', '014706013', '015508701', '012487789', '013291131', '013299768', '013317601',
      '014753819', '014753824', '014763847', '015673135', '015674881', '015677165', '015697171', '015698705',
      '013317856', '015673064', '015671437', '005806565', '013348506', '015124287', '015129942', '015675527',
      '015676332', '015676661', '015676664', '011069574', '013108448', '013108449', '015676676', '015678281',
      '015672746', '015673550', '015676660', '015716725', '007886993', '012566385', '014851472', '015674550',
      '015538836', '015671758', '015724866', '015747768', '016011588', '013389079', '015671489', '015891651',
      '015919710', '016505517', '015450012', '013230307', '015891788', '013233294', '015926865', '016506910',
      '015895480', '015895626', '014172347', '015922333', '015277668', '015898475', '015910757', '013235440',
      '013480844', '015894293', '015894570', '016505741', '015405357', '013820267', '015890840', '015900394',
      '015889601', '015889623', '002343383', '016106102', '014769059', '014769061', '015190139', '016030232',
      '016045110', '013693747', '015433689', '014729842', '014729846', '014970440', '015131926', '015334674',
      '015334686', '015346237', '015346242', '015141002', '015360956', '015136582', '015739009', '013157354',
      '015360967', '016819083', '013569815', '015137121', '015137131', '015137132', '012699539', '012808350',
      '015140996', '015169284', '012325699', '015368799', '011664410', '012276395', '013097053', '015141685',
      '015143534', '008165272', '013511744', '015124596', '012171957', '014474251', '015124606', '015141686',
      '015141873', '012590313', '015128213', '013942414', '010486240', '015048610', '015048614', '011158226',
      '011554277', '012144857', '012694323', '015347891', '011218769', '012302014', '013638489', '013892417',
      '014809034', '015122777', '015123802', '015123808', '015123818', '015123861', '015128227', '015123805',
      '015356385', '015124783', '015141687', '015141689', '015291169', '014745989', '002005800', '002098720',
      '002099691', '002991192', '003368608', '005009356', '005009392', '005013516', '005013527', '005013539',
      '005013566', '005013692', '005140428', '005152835', '005504060', '005504062', '005504067', '005504094',
      '005508141', '005564278', '005564305', '005577409', '006008782', '006008809', '006008914', '006008928',
      '006008934', '006008935', '006008943', '006008949', '006008959', '006008976', '006009718', '006147461',
      '006147463', '006147583', '006243607', '006257592', '006261110', '006313800', '007266835', '007310080',
      '007312723', '009277273', '010035475', '011411235', '014539290', '015308724', '015365639', '015365641',
      '015365643', '015365645', '015365646', '015365647', '015372576', '015372578', '015373760', '015373763',
      '015373769', '015423029', '005013160', '005013167', '005152938', '005013622', '005013681', '005013556',
      '005013623', '005013686', '005152939', '008003218', '015310866', '000137137', '000137146', '002341861',
      '002991191', '005013424', '005013523', '005013524', '005013546', '005013581', '005152839', '005262799',
      '006008790', '006008919', '007162872', '007312078', '007312517', '007312970', '007313106', '008423044',
      '008454231', '010636872', '015308727', '004715099', '005009266', '007265580', '007265582', '007265583',
      '007265584', '007265586', '007265587', '007265588', '007265590', '007265591', '015307825', '010328142',
      '010328143', '010328154', '010331501', '010331516', '010331523', '010331525', '010333897', '010333900',
      '010334538', '010339410', '010350829', '010367160', '014136992', '014329538', '015762490', '011278980',
      '000586044', '010333887', '010333888', '010333889', '010333898', '010338872', '010338873', '010350827',
      '010375586', '011587862', '014790126', '010333927', '010336597', '010331535', '010338385', '010338885',
      '010344114', '010350838', '011338874', '131109364', '004396249', '004396252', '011236074', '011236094',
      '011236697', '011236705', '011336982', '011384806', '014607941', '011236097', '014752685', '012350389',
      '001225878', '014920354', '001338270', '001338276', '004396253', '004396254', '012178035', '014574537',
      '015192130', '011236088', '011291248', '004403355', '011229630', '011229631', '001503838', '002341863',
      '002401014', '002813054', '005982933', '011236268', '011229554', '011291237', '013888350', '000892366',
      '001225890', '001338266', '004396255', '004403356', '011229547', '011229602', '011229603', '011232356',
      '011236196', '011236201', '011244410', '011384803', '015746857', '015680478', '015520050', '015520011',
      '015520019', '015650096', '015716561', '015696033', '015520035', '015520419', '015540708', '015541080',
      '015718476', '015703275', '015703357', '012899130', '013302367', '015692722', '015695406', '015695412',
      '015663986', '015671779', '015662476', '015667317', '015503500', '015506781', '015670120', '015670236',
      '015671777', '015671901', '015743154', '015663035', '014744790', '015673423', '015714821', '015672566',
      '015675783', '015670803', '015541835', '015671884', '015668772', '015675177', '015675339', '015677674',
      '015141508', '015667341', '015667356', '015669887', '015689095', '015711352', '013119487', '013792070',
      '015664379', '015666389', '014279776', '015673552', '015674903', '015674921', '015675131', '015676064',
      '015677586', '015679773', '014753544', '014754314', '015673004', '011681789', '013269498', '013284314',
      '013291132', '013396431', '014351724', '015141190', '015461576', '015508303', '015671148', '015671427',
      '015672913', '015678778', '015503182', '015672079', '015675262', '015676301', '015676561', '015676673',
      '015677081', '015677233', '015677599', '015678286', '013326525', '013970346', '014717464', '000713834',
      '010131040', '013291344', '015671474', '015672922', '015673451', '015674512', '015676630', '015679430',
      '015705262', '015672090', '015675173', '015678759', '015678774', '015679870', '015668757', '015670445',
      '015675348', '015723937', '015503562', '015669903', '015675500', '014123305', '015678765', '015491928',
      '016794140', '015589132', '016247048', '015079515', '015584840', '015625630', '015823922', '013598004',
      '015403147', '013687692', '015429503', '015173842', '015429486', '014500304', '015173367', '015173977',
      '015174005', '015864695', '015900047', '012879313', '015173435', '015173437', '015173445', '015173473',
      '015173692', '015173905', '015430370', '015173320', '015173697', '015173800', '015409444', '015425829',
      '015425944', '015429500', '015173694', '015173743', '015173747', '015173756', '015173764', '015424648',
      '015424699', '015429483', '015429494', '015864697', '015173455', '015173409', '015173709', '015173911',
      '015425823', '015409475', '005773434', '007261916', '010934439', '015245340', '015173675', '015572989',
      '015823843', '015386362', '010963204', '015080218', '010328148', '016691163', '014635379', '015427912',
      '015789961', '015981249', '015790876', '015980829', '015785320', '016144913', '015640122', '015980856',
      '015640952', '015791462', '015791479', '015596037', '016143307', '016429980', '015689059', '015891282',
      '015876582', '014745787', '015920141', '015660376', '015675864', '015987154', '013968853', '014702232',
      '013980786', '015162896', '013695985', '013695987', '015166508', '004022666', '015934842', '015776142',
      '015837410', '015839197', '015841742', '015843770', '014615300', '016022747', '015838140', '016068300',
      '016068301', '016760472', '016087428', '010325404', '016760480', '015050548', '015905389', '015507350',
      '015594452', '015594457', '015776710', '016256345', '016757639', '016757811', '015321865', '015323231',
      '015331444', '015331446', '015321500', '015818370', '015313141', '015323286', '011021506', '015492458',
      '015558412', '015491923', '015301960', '014253924', '015560156', '015560292', '015560164', '015560302',
      '015491943', '015492663', '015492594', '015558265', '015558269', '014853647', '015491867', '015972562',
      '015880924', '015971233', '015896600', '016028175', '015959169', '015870865', '011741451', '013788232',
      '016517526', '015880982', '015971381', '016002840', '016240380', '016494031', '014870035', '015992790',
      '015589229', '016517528', '015237174', '014869479', '012904939', '014599108', '014599315', '014599768',
      '014600830', '014602155', '014596176', '006122414', '009492087', '012855006', '008758288', '014628885',
      '014727277', '015707821', '015065281', '015636581', '015633762', '015297342', '014736295', '014310874',
      '013600927', '013600932', '015239775', '013527726', '014309036', '014335837', '015067399', '011647582',
      '015297966', '015631239', '005913112', '150015636', '150022881', '015060391', '998023803', '016163088',
      '016163094', '016163490', '991318863', '014701373', '016175062', '016162946', '004050210', '015105533',
      '015120317', '015340713', '015357754', '015738935', '015988311', '014671072', '014671073', '014745707',
      '014807036', '014812200', '001379235', '002703878', '008275934', '011647954', '014729728', '014730184',
      '014746017', '016755888', '004205036', '011656136', '014358208', '014792010', '014792011', '014792016',
      '014800371', '014802005', '014853188', '014911436', '015125968', '015506773', '015745930', '015749928',
      '015750886', '015750887', '013294918', '014804013', '011869581', '014253824', '014730595', '014807471',
      '015670875', '014716854', '015598729', '015230864', '014181869', '015344561', '014257701', '014794561',
      '015346069', '009191803', '010919212', '011339868', '011346991', '012274667', '013099978', '013675486',
      '013821646', '014463253', '014730649', '014730650', '014912023', '014791009', '014791062', '001423036',
      '013679902', '009845680', '011507735', '013409853', '014787431', '014790841', '014970397', '006601819',
      '012881116', '014795887', '015098660', '015175210', '015755379', '015334738', '008949542', '012027445',
      '014799215', '014803991', '015361417', '015369572', '015750178', '014793327', '014807053', '013195708',
      '014469234', '014791219', '014791315', '015152492', '015352347', '014730653', '014793404', '014803980',
      '014804006', '014745998', '015000175', '014800881', '014792018', '016591832', '016764690', '016713355',
      '015081913', '016728061', '016682224', '016695006', '016774916', '016775658', '016770313', '016919886',
      '016713352', '016512255', '013742243', '016786731', '016713356', '016731378', '016731114', '016774391',
      '016764741', '015081914', '016713394', '998854699', '016713362', '015135166', '013299151', '016713395',
      '016651080', '016713340', '016695727', '016686993', '008868061', '011689876', '014330396', '000182296',
      '014409299', '001682075', '000889167', '002468223', '013179640', '015483856', '015483809', '016670429',
      '016460507', '016454056', '016455027', '016455035', '009926667', '015029977', '015029997', '015029999',
      '015030001', '015048377', '015378616', '015428087', '015428089', '015428093', '015537514', '015540751',
      '015541589', '015920663', '015921273', '015921283', '015921546', '016408970', '016537865', '016656352',
      '015048374', '015044084', '015418978', '015908821', '015937616', '000586081', '006900544', '009927309',
      '010489372', '015029987', '015029994', '015029995', '015030002', '009926655', '009927292', '015029993',
      '015537512', '015908669', '015418965', '009998809', '009998815', '009998821', '015118314', '015183766',
      '015300452', '016544779', '016561671', '016545148', '015907831', '008875797', '015118332', '016407644',
      '015183772', '009998812', '014153868', '014655677', '014655708', '014655793', '014709079', '014728081',
      '014728089', '014639052', '015021446', '015021864', '015026184', '015024958', '015323234', '016005651',
      '015321406', '015598278', '015313131', '015313036', '015321499', '015321496', '015319767', '015322105',
      '015321416', '015313124', '015313127', '008325174', '015319792', '015313107', '015313031', '014117392',
      '015321058', '145270348', '015321418', '015321447', '015321408', '015317676', '015558409', '013463523',
      '015500859', '015558407', '015558417', '015492105', '015307352', '015560288', '015560177', '015560437',
      '015500196', '008783791', '015563147', '015560174', '015563143', '015491909', '015248580', '008805977',
      '015492693', '015262986', '015492700', '015491981', '012203043', '013627909', '015491861', '016423538',
      '008330508', '015894819', '015958949', '015992802', '016518466', '015971377', '015798957', '014613486',
      '012989386', '014138918', '014176876', '015798634', '006788616', '015742877', '014387423', '015742873',
      '015798544', '015633054', '015798964', '015800028', '015710966', '015774620', '015779143', '015798695',
      '015798715', '000847481', '005324504', '015302969', '013500196', '015633057', '014389807', '015793647',
      '010647458', '013601634', '013981284', '014135907', '015445574', '015742729', '015798407', '015443288',
      '001435722', '009785406', '010966183', '010980624', '013522753', '013598806', '013646645', '014151606',
      '014715203', '015774708', '010435564', '011244370', '015731301', '015743914', '015794147', '005796495',
      '008154046', '009486482', '010584030', '013336444', '014381387', '015742914', '015795229', '014292747',
      '015963766', '010590114', '015971462', '002578055', '015954662', '015957632', '015729640', '015805560',
      '015805563', '015894788', '002372704', '015935428', '015982271', '015354250', '015067899', '015237681',
      '015687703', '015707824', '015234693', '015238549', '015685337', '015687529', '015687536', '015240557',
      '015330485', '015297294', '015301884', '015234688', '015297319', '015297330', '015688699', '015727360',
      '015687992', '015688696', '012573297', '015689928', '015239932', '015690771', '011321458', '011921368',
      '015239521', '015693340', '015696912', '000504208', '001720034', '015239350', '015239351', '015448303',
      '015690217', '013600928', '013601703', '014715217', '014715222', '014715762', '015056720', '015238904',
      '015239777', '015240313', '015239795', '004328001', '010632968', '014135901', '014138769', '015238905',
      '015692646', '015690134', '015690766', '006783369', '008437194', '009309407', '011999475', '011999476',
      '013132970', '015277560', '015284351', '015300527', '015300554', '015636759', '015636764', '015636767',
      '015636773', '015692019', '015692040', '016003881', '016003882', '009448281', '009502091', '014742184',
      '015034436', '015071586', '015277569', '015277570', '015692044', '014743247', '015055692', '015691939',
      '015693690', '015693909', '015056070', '015056757', '010470826', '015056052', '015314620', '015636753',
      '015237873', '015692568', '015234811', '010589099', '014378468', '015689845', '015689861', '015690938',
      '015278319', '015039963', '016700170', '015083487', '014755437', '014853240', '014803976', '015150672',
      '012043009', '016713404', '016760713', '016846600', '007697483', '006931007', '010637947', '010144915',
      '002937108', '015500490', '014963523', '014119306', '015852735', '015478729', '014745703', '015747228',
      '015822297', '014730652', '016759565', '016760878', '016704331', '016510655', '015237590', '015042006',
      '015080240', '014120866', '016053848', '012251660', '015005771', '016161853', '008123943', '014817343',
      '010265872', '121437570', '000138651', '013168087', '005825677', '009226301', '015322539', '016112976',
      '016023895', '014889381', '014889383', '014889388', '012090844', '013905737', '014887570', '015677543',
      '015886655', '014889400', '013246802', '013106566', '015919712', '015464586', '015335580', '016669656',
      '014321210', '013309564', '015265339', '015897253', '014335456', '015265277', '016669440', '014147423',
      '014770840', '013656535', '014703929', '013787899', '011567663', '015191696', '015331812', '009971888',
      '012805796', '013733649', '013268017', '014768951', '014768945', '013576657', '012225436', '015573356',
      '015150999', '010908009', '015152106', '004513533', '015352815', '015150614', '015150616', '015150546',
      '015168363', '015168365', '015191794', '005511094', '015368795', '012843783', '014787411', '014788705',
      '014790718', '014790845', '014790914', '014790981', '014809001', '015149664', '014787218', '014788687',
      '014788689', '014790598', '014790716', '015151136', '015151437', '015162068', '015050478', '015150650',
      '015033544', '015152496', '015178089', '012113897', '014803520', '012248058', '015152086', '015150658',
      '015168367', '016129702', '013409064', '015152019', '015191789', '015191790', '015335136', '015151921',
      '015150366', '015191835', '014473779', 'LF0633600', 'LF0637400', '007162704', '014423232', '001161469',
      '015634642', '000518637', '007265589', '016187805', '016180130', '010333629', '010333899', '010441026',
      '012519690', '012519757', '012554233', '014083585', '014084361', '014085419', '014085905', '014086011',
      '014090144', '014415758', '014863661', '015126424', '015220758', '015761338', '015764661', '015816621',
      '010352479', '012519738', '015006514', '015055994', '005967691', '010338380', '014089052', '014089456',
      '004104853', '012765877', '014090136', '014090142', '014358728', '014089050', '010331484', '010333910',
      '014403809', '010341639', '012519699', '014085998', '014086675', '014109257', '014404914', '014863660',
      '015322333', '011236280', '016597086', '011229544', '011229548', '011229551', '011229555', '011229556',
      '011229678', '011236706', '011291231', '011291233', '011291235', '011291242', '011291247', '011384810',
      '011516215', '011516216', '011709940', '014918627', '014918628', '014918631', '014918632', '016086053',
      '001225867', '001225870', '002690783', '003666236', '008691097', '011244336', '000514070', '010553853',
      '011236265', '011236266', '000589737', '004642682', '006190899', '009651875', '011229543', '011236085',
      '013851540', '015191111', '011336988', '011229552', '011330829', '011229671', '011236197', '011236308',
      '011495513', '011581207', '011710008', '012172841', '123737800', '011330827', '015673932', '015399352',
      '015849784', '015695971', '016011315', '015851643', '015851401', '015851513', '015851617', '015711751',
      '015679370', '016151630', '015744500', '014889290', '014888346', '014889338', '014889382', '014889389',
      '014889394', '012549079', '014887567', '016087713', '015744504', '014887559', '014887560', '015300855',
      '015491410', '015750878', '015151928', '013545434', '013606198', '014716991', '014745785', '015380322',
      '015408795', '015584676', '015747917', '013556593', '015553477', '015617314', '014311324', '014554730',
      '012730046', '014787556', '014788697', '015177356', '014933498', '002414435', '011647803', '012893547',
      '013643392', '013644439', '014802399', '014803992', '002778750', '006473207', '009591628', '011086410',
      '011471671', '011749405', '011919701', '014190301', '014786466', '014787135', '014794619', '014807060',
      '014853220', '016087961', '000509234', '013388155', '013479802', '013602038', '014787428', '014790703',
      '014790724', '014790910', '014790915', '014802359', '014853136', '014853649', '014854004', '015000169',
      '015263178', '015288102', '015500268', '015873740', '011571391', '011902193', '014792023', '004324064',
      '006379541', '010512360', '010617452', '010623379', '010638970', '010688446', '011023270', '011057229',
      '011290450', '011505918', '012421801', '014147141', '014787222', '014788700', '014790659', '014790662',
      '014795906', '014802352', '014810854', '014831389', '014874530', '014911453', '014925563', '015170372',
      '015361435', '015566648', '015570558', '015832998', '015150840', '014718149', '014792008', '014853170',
      '015583669', '015583671', '002377828', '005313197', '014463786', '014802335', '014802368', '014810888',
      '014810971', '015179793', '015683541', '002287196', '011158225', '011680885', '013488331', '014588349',
      '014789901', '012268078', '013604293', '014600266', '014786423', '014846511', '014718147', '014786452',
      '014788681', '012145259', '015584680', '010897066', '015206775', '015433682', '008557478', '014858450',
      '015584003', '013234929', '014064110', '014794565', '014829850', '000193093', '015582055', '010232366',
      '015982163', '015173357', '015173386', '015173392', '015173396', '015173402', '015173406', '015173408',
      '015173461', '015173502', '015173582', '015173583', '015173586', '015173590', '015173593', '015173670',
      '015173673', '013927861', '015082786', '015173453', '015173701', '015173752', '015173809', '015245263',
      '015604630', '015173681', '015173947', '015173981', '015173983', '015173985', '015173674', '013251934',
      '014315119', '015185292', '015190940', '005552823', '002938997', '002938998', '006180248', '006180249',
      '015173731', '002388304', '002221838', '012831876', '015173766', '015173792', '015681124', '015802872',
      '014978729', '015173465', '009931851', '015173832', '011850159', '013139961', '015173678', '014401364',
      '001777749', '006202486', '009026676', '010430596', '010499051', '012053225', '012390893', '012705463',
      '015173475', '015682985', '015865895', '012828268', '014470479', '015173428', '006151843', '009318736',
      '010718179', '010931149', '011014860', '012550201', '013617877', '015173477', '015173777', '011821075',
      '015173815', '012416961', '013906448', '015192200', '015245307', '015245314', '014184404', '014439093',
      '014825574', '014787422', '015583714', '012519691', '012579253', '014108544', '014488513', '014895380',
      '014875652', '012519723', '014086413', '014907423', '012303922', '015556342', '015938855', '015213063',
      '015026692', '016243792', '014248333', '016750128', '016752042', '016088984', '016088986', '016751339',
      '016751539', '016750082', '016751958', '016751838', '014715470', '016002128', '015374894', '016037442',
      '015951709', '015951713', '016036985', '016036989', '016036990', '016181173', '016180472', '016091090',
      '015358054', '015252788', '016326581', '015620152', '015620031', '015623340', '015624470', '012676358',
      '015614081', '015635205', '015611870', '015611879', '015613425', '015834235', '015834384', '015514235',
      '015644430', '015646593', '015508578', '015614757', '015614761', '015645468', '015517456', '015646478',
      '015505746', '015612612', '015613880', '015755300', '015755356', '013601011', '014389808', '015635246',
      '004550462', '011817849', '012858875', '013601996', '013981282', '014293168', '014398527', '014735397',
      '014741864', '015634534', '015238915', '010955910', '011843538', '012866079', '013029942', '013533404',
      '013975100', '014736471', '014742038', '014746435', '015487973', '015611887', '015834386', '015483753',
      '015626154', '015649984', '015659370', '014293118', '015613454', '015660662', '014393996', '015613453',
      '015613455', '015055569', '015651152', '015316834', '015614685', '015614947', '015613422', '016275512',
      '015265059', '014426637', '014469506', '015069459', '005481296', '015704506', '015704517', '015704525',
      '015383677', '015381766', '015383526', '015379645', '015378777', '015382887', '015380238', '015380240',
      '015381406', '015383940', '015379079', '015379265', '015380787', '015381007', '015381027', '015381409',
      '015378509', '015379043', '015379072', '015379270', '015379550', '015380805', '015380313', '015381317',
      '015381860', '015382886', '015383095', '015379959', '015383171', '015381877', '015383922', '015383927',
      '014759361', '015378611', '015393987', '005036632', '014702450', '123558117', '123558118', '012741095',
      '121428157', '015954792', '015960147', '015954872', '015954573', '015942128', '010479367', '015942240',
      '015954799', '015954807', '016085361', '015063341', '015321435', '009146028', '016760839', '015890841',
      '015891830', '015891886', '015891897', '015891901', '015891904', '015891930', '015911671', '015531853',
      '015858205', '015364695', '015364703', '015364708', '015364714', '015857930', '015859714', '015860592',
      '015862718', '015857959', '015365464', '015858962', '015858963', '015365441', '015858764', '015365434',
      '015364692', '015858709', '015862610', '015862638', '016745202', '016011374', '015253095', '016030160',
      '016134312', '003345600', '007877000', '015122735', '015124412', '015124414', '015122742', '015814417',
      '016151530', '015649920', '015649975', '015611882', '015613766', '015613782', '015834391', '015487779',
      '015505690', '015646508', '015650685', '015655165', '015655324', '014737044', '015569469', '015755895',
      '014741759', '015483371', '015481657', '015144739', '015827082', '015614728', '016102793', '015650009',
      '015536640', '015658868', '015613849', '015613322', '015613875', '015755351', '010937331', '014514501',
      '015613882', '015614038', '015755305', '011724164', '014135916', '015533139', '015612614', '015301464',
      '014742108', '014398514', '014398539', '015056802', '015436495', '015450174', '015482484', '015517460',
      '015521772', '013600931', '014135287', '014138770', '014297236', '014398537', '015527490', '015528747',
      '015613784', '015626493', '015655202', '015493508', '008412576', '010635822', '011652482', '013646646',
      '014297859', '014745491', '015056821', '015482479', '015491119', '015612621', '015635517', '010803033',
      '015488308', '011647551', '013027274', '015147827', '015516208', '015517231', '015528700', '005486120',
      '008558059', '015298280', '010986683', '015611867', '015627034', '015644367', '015645448', '015651182',
      '015651365', '015651369', '015654191', '015655351', '015656746', '015658766', '015658839', '015658840',
      '015658843', '010630674', '010643819', '015654205', '015654448', '014389713', '015056813', '015613356',
      '015656749', '015237417', '015553597', '015506448', '014735156', '015237419', '015898105', '015614203',
      '015614205', '015614711', '015650082', '015240284', '015529192', '015615764', '015826848', '015516686',
      '015635557', '015629531', '015629529', '015477532', '015478521', '015477661', '015477585', '015077833',
      '015061198', '011928098', '011928099', '014729663', '015325711', '015069444', '015069453', '015069458',
      '015069461', '006859059', '001686881', '002124597', '015704521', '015380348', '015380998', '015383652',
      '015381315', '015379558', '015379050', '015379053', '015379059', '015379289', '015381023', '015381482',
      '015383546', '015393587', '013786151', '015380515', '015383654', '015391527', '015380991', '015383215',
      '015383914', '012169370', '012169371', '012169373', '012169374', '013438527', '015174792', '004736790',
      '012186145', '012377045', '013418630', '004966961', '001350800', '010724918', '010981703', '012228712',
      '013420587', '013420597', '013426765', '013451929', '013463945', '007202007', '009651232', '010077158',
      '010904831', '011160429', '012194277', '012421284', '013423428', '013454083', '013515845', '010906248',
      '012208019', '013859184', '009993454', '012268720', '007646609', '012407847', '013349789', '012218770',
      '004682759', '012184673', '004517564', '012182417', '012215866', '013478428', '013484036', '012361384',
      '013410645', '004051789', '014417210', '015815503', '015938152', '015953474', '015942214', '015937470',
      '015954564', '015954240', '015563858', '015938941', '015961065', '013591367', '015329137', '015661772',
      '005435562', '015954520', '015980768', '015811562', '004363290', '011172404', '014220762', '015942325',
      '015954554', '015954919', '015954946', '015955515', '015955656', '015283266', '015997347', '015149957',
      '014378261', '015954575', '015997332', '015932679', '014825444', '015982125', '006960351', '005729180',
      '007773068', '016228900', '016228848', '016235349', '016544139', '015950519', '016731471', '014428340',
      '012739861', '015755874', '016469242', '014717058', '011236092', '015445789', '016727034', '016727036',
      '016320464', '004834252', '011124809', '016068244', '016131155', '015594492', '016304288', '000593665',
      '004705475', '015087578', '016619404', '016672882', '016207274', '016206902', '010232529', '014357680',
      '012205510', '012205516', '014817297', '014817305', '014817306', '013852914', '013614125', '008652700',
      '015957637', '016432945', '015843059', '015591820', '015237100', '013616921', '014589915', '015591814',
      '015615902', '015591466', '015591796', '015591805', '010562942', '014059907', '000614650', '013997301',
      '014558480', '015022934', '015257464', '015591458', '015591761', '015591795', '013309584', '015446742',
      '015595374', '015591797', '015591802', '000668640', '012580467', '013309581', '002526052', '015137690',
      '013488587', '014853216', '014802396', '016499117', '014729723', '014745783', '014791969', '015194167',
      '015548288', '015548307', '014504017', '014745929', '014745934', '014792014', '014792017', '014793014',
      '014801322', '016060036', '014923214', '014925709', '014808755', '001004418', '015176397', '011903579',
      '015348124', '015410664', '015412722', '009881724', '011548485', '013599445', '014790912', '015230865',
      '015316479', '015431017', '011857048', '013599429', '011339471', '013048733', '014651014', '015495050',
      '014171051', '015424594', '014791883', '012097841', '014793491', '015165743', '015243062', '015751309',
      '015409587', '015412765', '015360922', '005496581', '015416201', '014809043', '014500141', '015564352',
      '015047852', '014991049', '014808737', '002783225', '002788717', '002891622', '014790794', '014794595',
      '014794596', '011557555', '013199161', '014792407', '014794578', '015553719', '016919082', '016918888',
      '016917763', '016920264', '016752195', '016918713', '015515155', '015634655', '015384166', '015314474',
      '016681255', '015298082', '015298086', '015301744', '013335261', '015798486', '015634924', '006965172',
      '014330941', '014357784', '008392325', '012028360', '011896748', '015355705', '015364213', '015402725',
      '015524502', '016783615', '015524505', '070003029', '014376864', '015171055', '015565893', '015638328',
      '010232714', '016117619', '011836816', '012546554', '014918401', '014918406', '004703321', '009353569',
      '015187455', '014124447', '007411433', '012134185', '013825031', '015119944', '016262730', '016460544',
      '016681979', '016046492', '014746195', '016005612', '013587373', '015259396', '009359269', '015264403',
      '015323196', '015323306', '015598235', '016011511', '016220360', '001378873', '012207297', '013084039',
      '015556589', '015298428', '003958799', '013631329', '015297674', '015491854', '015491859', '015277312',
      '014926796', '015932769', '001863912', '015297226', '016061125', '016179136', '015838803', '015652115',
      '010523942', '015261848', '015631771', '015794137', '015450467', '015450940', '015628419', '009640589',
      '007680318', '015298806', '015687126', '016753333', '015330486', '004388604', '008098546', '009484494',
      '015300532', '013766826', '015151777', '015171078', '015171089', '015151135', '015151162', '015171077',
      '013536045', '015170364', '015150981', '015150984', '015170362', '013877303', '015374093', '014142171',
      '015542331', '014414272', '013337632', '000453296', '009349758', '011860829', '004626603', '014875655',
      '015654472', '015044067', '014595388', '015420903', '016194610', '015237589', '012130199', '008151541',
      '015821294', '014232092', '007679425', '011893220', '000523297', '005426092', '014808784', '015616309',
      '013235034', '011635075', '013006264', '013887402', '014317454', '015260735', '011756702', '012380650',
      '013228607', '013888826', '014825442', '015598327', '014318229', '015897539', '011325564', '013268022',
      '015894280', '013176284', '014335460', '014493915', '013228623', '014424606', '014791954', '014853168',
      '013081624', '014718151', '015361488', '013560851', '004434746', '012891019', '014786472', '015000179',
      '012692404', '014803988', '014754873', '015368790', '015368801', '014790684', '015566624', '007387536',
      '010818244', '012144946', '013600983', '014578573', '014790622', '015334112', '015785685', '014907325',
      '014911367', '014792006', '014803995', '013772460', '014745790', '014745791', '014788711', '014802369',
      '011988439', '012442273', '012698580', '014789898', '014786434', '015334432', '014708343', '014802392',
      '014852310', '014798090', '012036687', '012163648', '014706330', '005564102', '007160041', '006903115',
      '007266109', '007266110', '015915779', '010331503', '010331504', '010473394', '013240523', '015677919',
      '013258380', '013264912', '013305197', '014701395', '014704194', '014753533', '013287657', '015669899',
      '015672093', '015679599', '014234706', '015675419', '015679797', '015583151', '013533010', '015390658',
      '014794553', '002313012', '015281420', '015729656', '014790681', '015151309', '006191148', '010987246',
      '011110645', '014802353', '015152427', '015206408', '007530743', '015751312', '010979974', '011794508',
      '014802367', '015135378', '011612566', '006852973', '012542575', '015000149', '008464297', '009298171',
      '014790607', '013724955', '015207132', '013514061', '014799214', '015620744', '011761177', '014787150',
      '001389994', '001720031', '010554013', '011507736', '014787412', '014802358', '015140469', '010617416',
      '011596549', '011598178', '013527732', '015583662', '004850863', '004850865', '013812357', '012696152',
      '014802366', '015074497', '003504100', '014587004', '015706616', '014794143', '014794622', '014911410',
      '015548887', '015754979', '014794620', '014261285', '016422889', '016037726', '014784891', '015041762',
      '016574555', '016574825', '014784908', '015938873', '015939701', '014236221', '016896330', '015052418',
      '014864939', '016000797', '014614967', '006165513', '015210987', '015213185', '011728574', '010667587',
      '014551261', '016103836', '012186504', '012378038', '013937785', '015334835', '011558680', '012198696',
      '003381441', '008716729', '015383785', '015591785', '007906357', '015591786', '000680508', '013993092',
      '014059897', '015257212', '015591763', '013997303', '015591687', '007127730', '002638015', '005513963',
      '015245777', '015257205', '015591787', '015591788', '015282717', '015618758', '015282962', '015282969',
      '015257906', '015283271', '015619376', '015621384', '015283418', '014825320', '011286802', '015334274',
      '013833737', '015338713', '015352228', '015352233', '015352248', '015352254', '014955273', '014854382',
      '015000173', '014792978', '014854384', '016865201', '016649733', '016649753', '016654293', '016766823',
      '016766956', '014731410', '015897058', '015897059', '016113273', '123737944', '123738452', '123738610',
      '123768593', '123802000', '123808389', '123508055', '123738833', '123737652', '123768784', '123770452',
      '123737644', '123396829', '123737596', '123737990', '123738765', '123769287', '014681378', '015469685',
      '016005705', '000179543', '004030964', '009927287', '011441499', '011457910', '012338529', '014590734',
      '015051035', '015404805', '012646517', '014595982', '014759652', '010637635', '014742845', '015631628',
      '123538671', '123538672', '123539031', '123539032', '015656688', '015632597', '015632599', '012669341',
      '013567219', '011514226', '013805102', '013809950', '014441231', '014488799', '014667891', '015044590',
      '015234058', '012468264', '014478814', '014486355', '015243900', '015224427', '014939486', '014535386',
      '012253817', '012850624', '015122726', '015122730', '015122731', '015122739', '015122741', '015124530',
      '015129286', '015133321', '015174151', '015205993', '015205995', '015233929', '016538058', '016538166',
      '016538494', '016538669', '016538693', '016557324', '016607815', '015234871', '015236533', '015122729',
      '015129285', '009926648', '012310419', '012310420', '012850145', '015236534', '015491476', '015822606',
      '015822614', '015510496', '015493485', '015237414', '015867913', '016005837', '015822571', '015481662',
      '011753729', '015462648', '015872930', '015872934', '015664782', '015667190', '015350107', '015060488',
      '001032254', '015885150', '014790552', '015687820', '011527764', '000603550', '009967209', '002460688',
      '001329163', '004736547', '009970810', '012261226', '000892515', '001776166', '002148108', '007203913',
      '008377073', '011674388', '015669576', '015799231', '003911694', '000509235', '009881725', '009887615',
      '005825965', '007026286', '008913463', '012167390', '000590491', '008499854', '003716507', '006144356',
      '013011871', '014332327', '015283551', '015283554', '011080431', '013375268', '014504314', '000742072',
      '013961704', '013800690', '009993042', '015799639', '014753812', '015620674', '015620678', '015620683',
      '015620725', '013277781', '013676668', '013921831', '015282440', '015282459', '015282461', '015619353',
      '015618612', '015622022', '015622037', '011600495', '015282538', '015621974', '015622023', '015565208',
      '015622006', '015622019', '015622034', '015621392', '015618139', '015282935', '015618118', '015621372',
      '015284041', '015618598', '015293192', '015303632', '014572615', '009031296', '014152636', '011210786',
      '012637061', '014129564', '014149307', '014149314', '014149317', '014935859', '015305068', '015638620',
      '006783469', '014128175', '014163276', '014863208', '015521736', '010982029', '001003541', '001005303',
      '001005997', '001424355', '014121282', '014130269', '014126770', '014134029', '014134031', '014140328',
      '014165916', '002871706', '014126769', '009897435', '014850771', '013367175', '014189086', '001768117',
      '010219027', '014121777', '014143664', '014146476', '014166520', '014172927', '014840489', '015301545',
      '016211815', '001217929', '005849053', '012878770', '013728923', '014120585', '014165358', '015254843',
      '014128088', '014141459', '014916622', '008422613', '014171043', '009684060', '014121284', '014141453',
      '014142172', '014142178', '014219828', '014969412', '013205818', '013205819', '011676522', '012000897',
      '002023639', '011553798', '013261195', '008338561', '012850612', '015122728', '015122740', '015542707',
      '015210291', '015627515', '014999143', '013316714', '016229813', '012931092', '015332675', '016009562',
      '016206728', '016048479', '015146575', '015500856', '015334451', '014161851', '016177718', '013886230',
      '015900063', '001898467', '009581214', '013882776', '016415050', '015897994', '002372703', '006499100',
      '009155127', '007928233', '014562273', '013096189', '014498430', '016194518', '014181921', '014700455',
      '014701370', '015096341', '016169070', '013722264', '015501399', '014729725', '014792305', '014793029',
      '014853125', '014853984', '015193988', '015193989', '015745932', '014745708', '014809086', '015033672',
      '014730651', '014745773', '014745776', '014745782', '014791382', '014791948', '014791966', '014807039',
      '014807064', '014936000', '015221083', '015552935', '016112747', '016466243', '003835082', '014729622',
      '014759206', '014793403', '014794144', '014794554', '014794556', '014794582', '014794583', '014794602',
      '014799067', '014799182', '014911503', '014970366', '015033313', '015247539', '015345970', '015369878',
      '015369905', '015553442', '015751323', '015751641', '015754981', '014221912', '014755405', '014791955',
      '014799041', '014802390', '014807061', '014807063', '014807077', '015165736', '016577242', '002303681',
      '014962523', '015715718', '011780657', '014802029', '014808591', '014794606', '014794607', '014955214',
      '015192782', '014791870', '015354726', '014792341', '014793485', '015206693', '015356414', '014787548',
      '015786879', '014793962', '015361585', '015003224', '014808596', '015037537', '014746198', '014807047',
      '014808482', '015165741', '001439390', '012473211', '012879322', '014786895', '014790571', '014803982',
      '014808597', '014810857', '014810858', '014810859', '014810861', '014810862', '014810863', '014810866',
      '014850778', '015078235', '015158120', '015238681', '015750864', '000691187', '002351483', '007858155',
      '010494807', '010620827', '010793275', '010821017', '010887498', '010926587', '010963169', '011156643',
      '011527724', '011542073', '012205613', '012810983', '012810990', '012838191', '012838195', '013280605',
      '013287163', '013451062', '013469736', '013680013', '014003145', '014787165', '014794206', '014800370',
      '014809039', '014852041', '015052708', '015751317', '219133744', '001039185', '014745710', '000509227',
      '009474364', '011479723', '011491934', '011491935', '011505886', '011968088', '012807901', '013400225',
      '013405061', '013463692', '013522049', '013561547', '013601008', '013996975', '014787433', '014790574',
      '014790686', '014790849', '014790941', '014790942', '014802354', '014999342', '015000162', '015033311',
      '015073386', '015151735', '015244508', '015333863', '015744530', '015744538', '015749929', '015751307',
      '015785688', '011067496', '012875715', '013601002', '013601006', '013601707', '013601997', '014297098',
      '014381755', '014786379', '014794585', '015353760', '015361426', '015551324', '015553887', '015750873',
      '015750874', '015750877', '014727266', '014792024', '000843916', '006602971', '007638912', '009720479',
      '009998288', '010615302', '010666759', '010766080', '011029221', '011209097', '011511036', '011556116',
      '011721979', '011831237', '012107427', '012533157', '012927257', '013405671', '014151603', '014335836',
      '014741623', '014787231', '014787266', '014787276', '014790561', '014790565', '014790589', '014790600',
      '014790606', '014790615', '014790637', '014790780', '014795873', '014795880', '014795893', '014795896',
      '014795917', '014795920', '014925550', '015000146', '015167873', '015334113', '015351295', '015361483',
      '015361565', '015566656', '015739268', '015750889', '015751324', '015751325', '015784864', '015785684',
      '016105975', '016125106', '000137228', '004320776', '005977399', '014911432', '014953355', '015000187',
      '015206426', '015206446', '015751311', '011209463', '014790774', '014792003', '015360996', '015555174',
      '015742996', '001050339', '010961104', '012953525', '013409884', '013605935', '013607826', '014408651',
      '014669014', '014787736', '014809073', '014809651', '015750872', '015801153', '003675650', '008045694',
      '009738301', '010721665', '010933503', '013606017', '013607725', '013855215', '014787287', '014787569',
      '014791880', '014970409', '015033545', '015033972', '015188149', '015450130', '004044098', '007253360',
      '012044888', '013105011', '014390981', '014398525', '014467854', '014730592', '014787177', '014790569',
      '014952197', '015009577', '015221353', '015234179', '015334445', '015334476', '015334749', '015342349',
      '015360015', '015447669', '015750883', '015750884', '015751318', '015751319', '015751320', '015752969',
      '015755145', '015762422', '014794613', '014809084', '014791999', '015054237', '015751310', '013599336',
      '014794205', '014960506', '015166731', '015555164', '015749373', '015749375', '015751315', '015751316',
      '013949510', '014730631', '014730632', '014730633', '014730635', '014730646', '014743576', '014743579',
      '003525617', '014791951', '014807050', '014807054', '014807055', '014809093', '014809798', '014809799',
      '015048233', '014791823', '014802379', '015555187', '015773689', '004848041', '015425277', '002154048',
      '014802343', '014469498', '014794342', '014809060', '014793924', '014793938', '012842709', '012973217',
      '013058848', '014596969', '014826107', '000446914', '014792364', '014792351', '014794605', '014792365',
      '013616056', '015099496', '014960510', '014960518', '015380338', '012075985', '012875714', '012361585',
      '014953745', '014953769', '015334428', '011904607', '013522754', '014792321', '014792904', '014803996',
      '015723897', '001661076', '014865860', '014935946', '014935991', '014935993', '014935996', '016717845',
      '010671700', '002874852', '005953108', '015722011', '016737930', '015899861', '016093969', '015411319',
      '015773524', '016691585', '016725316', '016633921', '016715112', '010852839', '016730786', '016730981',
      '016142020', '016769094', '015723925', '016592269', '015899870', '016736080', '015131448', '016093977',
      '015838596', '015868479', '010476305', '010389481', '010813419', '013866208', '014793383', '016733480',
      '012993332', '016198094', '014792020', '014792021', '014803989', '014953097', '014810958', '014794552',
      '015046455', '005950083', '009932738', '000806004', '009850823', '015414090', '011883863', '011509781',
      '011857071', '014172467', '011987585', '011361782', '012716357', '013788572', '012658911', '010850825',
      '016480172', '016480173', '016548604', '016609691', '016460481', '016460565', '016461740', '016480201',
      '015630085', '014829880', '015334460', '014853963', '015492099', '014817303', '015297900', '016003133',
      '013886229', '016177577', '016307432', '014708342', '015238855', '013207024', '015876954', '015284896',
      '013237844', '015893950', '014792748', '009321972', '012976308', '011950825', '015171578', '006388920',
      '013796073', '014952220', '016601173', '014537148', '011496952', '012531494', '015040728', '015150548',
      '014745709', '009501403', '014793487', '014789895', '013829830', '014794570', '008861103', '013828736',
      '013841441', '014505139', '002081918', '012157505', '001721919', '015687856', '011560021', '016719644',
      '009881723', '000874652', '002256408', '007616882', '007638905', '008775796', '003458055', '014364553',
      '014364559', '014875661', '014875421', '011727742', '015840796', '016018069', '015616190', '014801311',
      '009993043', '003927628', '015676649', '015698689', '015703372', '015701832', '015702643', '014289233',
      '015703289', '015706735', '015716584', '014965940', '016644111', '016644125', '016782971', '014247315',
      '011022477', '015443388', '015975093', '015570710', '013842507', '015022143', '015074106', '015167549',
      '015247656', '014994267', '016102813', '015488519', '012915772', '007593290', '010635996', '001422561',
      '002028857', '008378859', '007537171', '007640064', '009143819', '009390661', '010530958', '012188741',
      '006255756', '009338121', '009349761', '009370453', '002368359', '002694038', '009036754', '009042807',
      '009432061', '012300093', '012345848', '015684920', '015666505', '001000376', '009119226', '014389805',
      '014389806', '014137702', '014295265', '015742816', '015748004', '010954631', '012573245', '015794412',
      '011615766', '011636165', '015238996', '014745401', '014714137', '014874614', '002693218', '012405003',
      '009083194', '015732637', '015732634', '015717982', '016202465', '002590205', '007012215', '016788512',
      '015779026', '014317380', '011996760', '014136985', '014842632', '014937897', '014988201', '005434372',
      '002748041', '011401479', '014151896', '014855037', '015434939', '015806836', '015767906', '015806760',
      '015812408', '015810834', '015805009', '015796511', '015796542', '015798299', '015811022', '015767896',
      '010729846', '014984841', '014749237', '014749257', '014209983', '011996761', '014153162', '014151924',
      '014154725', '014120863', '014870636', '014133481', '002997426', '011943128', '013592870', '000190877',
      '015733394', '016306877', '015871979', '016240410', '001768110', '002079274', '002341864', '013860204',
      '001724180', '006467389', '001515572', '005139964', '013859214', '013859216', '013860206', '005140211',
      '005140213', '009162170', '002457699', '015487566', '014615334', '015914662', '016093516', '015375067',
      '011200419', '016090309', '016426142', '016806389', '015535065', '014299759', '014697599', '015538345',
      '015533445', '009390687', '015210378', '015362964', '015071725', '015995854', '014837480', '012036542',
      '015621944', '007245541', '015621976', '015622056', '015622135', '016161870', '015622033', '015619017',
      '013511131', '123738331', '015536646', '015234687', '015533130', '015538434', '015534731', '015533355',
      '015534791', '015534800', '015535224', '015538438', '015540779', '015660758', '015660776', '015660936',
      '015660938', '015664819', '015664825', '015668400', '015533202', '015537812', '015660768', '015151611',
      '014135902', '015533496', '015350370', '015535071', '015671010', '015238934', '015238935', '014777177',
      '015535112', '015137687', '010386432', '014309247', '010744599', '016022419', '015751564', '016024567',
      '015354769', '015704484', '013496920', '014164526', '014168873', '014856884', '016564074', '016564405',
      '015391547', '015334957', '015338771', '015338371', '015334279', '015338374', '016918535', '013239900',
      '015026539', '012487288', '123333860', '014220730', '004722783', '013769629', '016872153', '005040393',
      '009283127', '001157149', '001998831', '013243462', '014715362', '016050532', '015711529', '015863062',
      '014654561', '014715364', '006341995', '219101201', '014655999', '014836467', '014769125', '002089255',
      '013872150', '014769079', '014769081', '014769106', '014769076', '014587278', '016095729', '015478550',
      '012043285', '016096231', '015654533', '015478558', '014426598', '016533926', '015047527', '015387140',
      '013954269', '011583100', '011583219', '011583220', '011643294', '011574140', '013366988', '011769416',
      '015233772', '012822560', '011689934', '013611361', '013018013', '015567030', '011660599', '011632286',
      '016306805', '013309271', '013538589', '016306793', '016306802', '014412614', '014463824', '014442387',
      '014474363', '200015653', '001304235', '002784824', '011620672', '011639741', '011712333', '014957479',
      '014957484', '014957487', '011553874', '011553910', '011580828', '011580829', '011583164', '011583203',
      '011631415', '011905705', '013006263', '013921660', '014661927', '015493074', '015849517', '016031118',
      '121564863', '200055908', '200056023', '200068634', '200068646', '010599374', '014116384', '005501879',
      '006825930', '008574945', '009349751', '011430512', '011553856', '011553889', '011580819', '011583188',
      '011609952', '013663539', '014182337', '014373887', '014481528', '014545913', '015620269', '016032289',
      '123100674', '200000441', '200042513', '200042650', '200055535', '200055883', '200056004', '200056928',
      '011555404', '011964820', '015790187', '008801263', '009008006', '010819814', '011571405', '011660597',
      '012828112', '012870269', '012970655', '014956702', '014956703', '121240982', '121564524', '007271286',
      '010156360', '011643354', '012097297', '012157133', '015642776', '011739155', '013867847', '016308756',
      '200055441', '200064473', '200064642', '219080048', '219080492', '219080507', '011600636', '011769391',
      '013836764', '219077440', '219077441', '011125158', '011791035', '016159680', '014654153', '016161178',
      '016420963', '011692416', '015042607', '015084867', '016155810', '009845181', '011956637', '014307176',
      '001159042', '011885076', '012284385', '015023978', '009362139', '015967106', '200005207', '012809021',
      '219064667', '011547797', '015965444', '015712990', '015630418', '015634609', '011635030', '015844762',
      '015844130', '011580827', '011583206', '011841937', '014666467', '014829961', '015260694', '015260763',
      '015339483', '015427333', '015814215', '015892581', '015967124', '015971838', '014985756', '015967392',
      '004776768', '009222017', '011374829', '011550052', '011553858', '011553859', '011553893', '011553894',
      '011555398', '011580816', '012046745', '012077564', '012734535', '014679976', '014784201', '014829266',
      '015260692', '015260698', '015443609', '015499572', '015913128', '015971840', '219080452', '008103702',
      '008446796', '011824104', '015971415', '011488683', '012205501', '015716211', '219062220', '006182514',
      '014653858', '015581998', '015814196', '015966515', '200064886', '011740406', '011785431', '015967066',
      '661557687', '007299852', '010140493', '015781405', '001139834', '015669824', '005007195', '016048114',
      '009473068', '015407771', '015812471', '015860313', '991525631', '015795766', '015795767', '015796177',
      '015797009', '015797044', '015797154', '015799596', '015847554', '015963760', '015963764', '015963901',
      '015296949', '015973350', '001949829', '011985911', '012578398', '014956272', '014963848', '015795259',
      '015795718', '015795731', '015796961', '015798240', '015798569', '015798586', '015799390', '015799393',
      '015799436', '015799443', '015801256', '015812906', '015845761', '015846115', '015846430', '015847490',
      '661594295', '013179138', '011681511', '013389156', '011650523', '011671167', '014489697', '014489720',
      '014489723', '014557744', '013198995', '009457904', '011549966', '011549967', '011549968', '008461830',
      '011643378', '011643379', '012662097', '015368385', '218787524', '219064042', '219064056', '219064057',
      '219064058', '219064059', '219128431', '007353551', '008316946', '011794387', '014393062', '015822368',
      '200068235', '218789053', '006209928', '009562590', '011607965', '011665642', '011689871', '014957892',
      '200011678', '200068283', '014569307', '011714740', '013538540', '016064382', '011678065', '011102489',
      '013141345', '014803843', '014803868', '015774779', '219076682', '011392189', '219076613', '011609999',
      '015193822', '218786687', '011550049', '011571327', '011550050', '200037238', '011671360', '014338054',
      '014691955', '011579013', '011596513', '011583249', '011689982', '014957840', '000428988', '002000257',
      '011550103', '011596401', '011671877', '011671961', '012197786', '014957482', '014957488', '014957859',
      '015716937', '011589223', '015278380', '015278385', '000545655', '000680516', '000712505', '001159526',
      '005765417', '006040041', '009887840', '010844677', '011550063', '011553912', '011580832', '011580834',
      '011580835', '011583204', '011590065', '011787325', '011794315', '011805620', '011918766', '012971865',
      '013685744', '013811202', '014237136', '014246341', '014356260', '014422121', '014639606', '014968201',
      '015717702', '015862998', '016031099', '016032265', '016035115', '016207954', '123053039', '200042640',
      '200068578', '200068590', '226193422', '002258516', '002264833', '011553907', '014232038', '014492546',
      '200037783', '200068299', '200068591', '200068612', '218787520', '011583194', '200056681', '219078565',
      '000446477', '001848992', '004883889', '008807746', '011550033', '011553890', '011553895', '011555396',
      '011574052', '011578933', '011580814', '011846353', '011846375', '012805795', '013663540', '013790804',
      '014182335', '014223901', '014336856', '014364437', '014999294', '015092488', '015220642', '015285125',
      '015731681', '015774083', '015807560', '200000501', '200000953', '200056932', '200057215', '200075343',
      '219080105', '219080107', '219142876', '011671399', '011785454', '013591451', '011553878', '011553882',
      '006952157', '009532014', '010374129', '011560444', '011574112', '011643357', '011739157', '012969906',
      '014451159', '014492549', '015716255', '015823000', '200041714', '219062181', '219062206', '219124345',
      '219132485', '010792931', '011739224', '015195829', '010950297', '011609989', '011785427', '011791036',
      '200056052', '200056095', '200056179', '200056202', '219080044', '219129987', '219147337', '219202482',
      '010487743', '011600635', '009943435', '010274716', '007586456', '011643348', '011643349', '011643350',
      '011791219', '219133865', '011557417', '011571347', '011805643', '015826394', '015830230', '121514279',
      '200012620', '200056942', '218808106', '218808108', '219061911', '219080108', '001677725', '010145949',
      '014957227', '014372507', '121597938', '009856630', '016167831', '015529403', '015712497', '015712992',
      '015590063', '200022627', '015391163', '014362306', '014542881', '014956270', '015216755', '015589534',
      '015598978', '015598984', '016137330', '016137363', '016137374', '016137929', '016138309', '016139734',
      '016139979', '016140676', '016140692', '016140697', '016140724', '016140748', '016140759', '016140760',
      '016141202', '016141306', '011296294', '003684972', '009935546', '000750244', '015731668', '015588491',
      '219064616', '219123182', '219123186', '200002205', '219132237', '011615348', '011689854', '200001028',
      '200037256', '219064380', '200075275', '219131424', '011600624', '013893240', '015233766', '012209958',
      '012195907', '014818080', '011547664', '200001104', '200002032', '200002037', '011600634', '012295493',
      '012295494', '011547745', '200070170', '014867103', '200057005', '014957466', '001961982', '002221839',
      '002788575', '002894069', '004495022', '011555407', '011555421', '011596452', '011596454', '012819342',
      '012819344', '014957474', '014957477', '014957480', '014957483', '014957485', '015638090', '200008826',
      '219077522', '219143827', '011580766', '015823500', '011557488', '011583212', '011635005', '012209601',
      '012843800', '014234766', '015233914', '015970699', '016032278', '016037880', '200055839', '200056142',
      '200057216', '200068654', '014957678', '015842015', '200068608', '200074977', '219078465', '000113247',
      '007775791', '010588455', '011553892', '011604544', '011787301', '011791283', '014340081', '014967010',
      '015187065', '200055744', '218787128', '219080483', '012237194', '011643374', '011678070', '012113121',
      '012811866', '014408406', '014409043', '219062187', '015642764', '015642767', '000713836', '011557416',
      '015842022', '200056196', '200074040', '219080083', '012205711', '200069193', '015826373', '200056941',
      '200068641', '218791477', '219062068', '014957223', '004767855', '016297140', '008233055', '014956276',
      '004783431', '011600418', '016204212', '012196260', '014971366', '005370946', '001656063', '016270199',
      '012827680', '016333714', '010749642', '015634575', '002546215', '011596453', '011792904', '013502088',
      '001355157', '009846210', '011650583', '013861711', '015611790', '016273598', '014194095', '001670834',
      '008787196', '011580815', '012981396', '012981433', '012989821', '015812136', '219135846', '007216876',
      '000129514', '013075502', '014672161', '015798923', '015798924', '012974634', '200056394', '013632870',
      '219062094', '000591140', '006824015', '006863301', '009022355', '013397676', '008235322', '007671596',
      '012958592', '219138106', '016419381', '011565312', '016316609', '001964518', '002952421', '016605994',
      '014945639', '014803847', '015256692', '015050814', '200012789', '015502615', '015440671', '015973103',
      '011457709', '015078747', '015598867', '219064746', '015103340', '015740696', '015049675', '015052803',
      '015589420', '015598855', '015031522', '011607959', '015078762', '015078769', '015709746', '015740605',
      '015740721', '015569538', '015660958', '014438388', '015049667', '015589427', '016179895', '015075815',
      '015816955', '014793031', '014745704', '014774776', '014783630', '014769751', '014887002', '015063912',
      '015178606', '014771320', '014771371', '003745732', '015033160', '014706230', '014769875', '015317274',
      '014701626', '014769921', '014746910', '000043164', '010561501', '011875878', '013006266', '013035631',
      '013357410', '013656313', '013803395', '013819970', '014701425', '013235505', '014774025', '000145850',
      '008098544', '008892589', '014769196', '014769200', '014769201', '014769137', '015894956', '012600317',
      '014156744', '002808342', '000893031', '014780101', '014780122', '001677775', '014612084', '015099898',
      '015077938', '014769148', '014769338', '005839349', '015152404', '000523544', '011341332', '011689976',
      '015823456', '010160430', '200068307', '000687201', '011634971', '012474149', '012677782', '012687895',
      '002893141', '011500877', '012106906', '012991628', '013115357', '013538463', '014388821', '014886567',
      '016300268', '007928248', '005765752', '007749545', '012656333', '013422559', '011580783', '007805243',
      '007929839', '009215344', '012107946', '014373493', '015278458', '011610002', '219080250', '011600672',
      '012677863', '012677864', '011147653', '219064612', '219063932', '007530709', '011583104', '012794647',
      '013364847', '200068370', '016124189', '200063233', '200063469', '011696353', '200063057', '200068196',
      '010463207', '219135435', '001002358', '200069519', '011739306', '011739307', '200042092', '001433941',
      '001720010', '002744692', '007105571', '010278261', '011259989', '011571411', '011578951', '011739258',
      '012967395', '013520706', '014369433', '200043542', '219136182', '016685017', '006140247', '010473997',
      '011662365', '011876058', '014978015', '200068260', '200068277', '011879502', '015774089', '011547683',
      '016032286', '121514078', '200055825', '219080082', '012663877', '001987953', '011208090', '012107942',
      '012107944', '012107945', '012113122', '015716209', '015716540', '001651959', '005822133', '012315217',
      '016031133', '012122413', '012140069', '015424075', '200041779', '200056124', '218787529', '014811327',
      '010897682', '013374716', '011867248', '121628763', '200068610', '218787521', '009267523', '015372486',
      '015658121', '015818489', '008466442', '014731313', '016172480', '016172517', '013042026', '014958297',
      '015602397', '016306120', '011634962', '219125746', '013388454', '010884372', '011140083', '011678311',
      '011701982', '013397358', '013688280', '219064393', '011699892', '010897693', '010897774', '011229633',
      '011229634', '011229635', '011229637', '011247057', '001503963', '011573785', '011635047', '010897675',
      '011150899', '013707212', '002799309', '011563765', '010897680', '011140185', '010897735', '015092706',
      '005483126', '010897649', '014605121', '015124291', '014850456', '015519607', '015590074', '015857957',
      '016231739', '015006614', '011671162', '007251437', '219064034', '014803853', '219076528', '011259990',
      '014810576', '014810577', '011609649', '000879122', '011672031', '014957455', '002696840', '011600761',
      '011799121', '012967394', '003516484', '011727034', '014810536', '011692483', '009993752', '013025092',
      '200070133', '014810518', '014810520', '200068611', '016043394', '015849008', '012199528', '015593929',
      '004858955', '016141782', '013391227', '015124680', '218787514', '200063472', '012737813', '011769384',
      '011578970', '002354134', '011678116', '012100360', '015716609', '008279291', '011645894', '016031759',
      '011867131', '014942316', '015324030', '009496280', '011553899', '011554376', '013396531', '014631054',
      '014745220', '004630200', '011583223', '011151087', '011600675', '004463159', '004825994', '011538291',
      '011620699', '011203361', '009002373', '015549530', '016614314', '015525616', '015851696', '016435172',
      '219063912', '219129975', '012035660', '015251636', '010328145', '001816984', '010344115', '015591809',
      '015237711', '015591780', '016707257', '001068674', '014060006', '015595376', '011005204', '015347806',
      '015530842', '015591817', '015591800', '015591759', '015591794', '016579314', '011739304', '015288731',
      '015591474', '015430959', '015583677', '015278260', '002431167', '011608030', '016265171', '016037013',
      '219064332', '015567016', '001293221', '015335253', '015028124', '015331439', '002532478', '009338120',
      '123084126', '015196245', '015418880', '014806389', '016427080', '011635165', '015762217', '002693464',
      '016266130', '014817200', '015987843', '012328490', '014957388', '015251688', '014804876', '016162509',
      '016175702', '016156320', '004171120', '009826816', '011298990', '014955257', '014853183', '014808594',
      '014793946', '014638181', '014793488', '015033532', '014786893', '014800375', '011565440', '014790576',
      '014790858', '015555525', '011505884', '013754165', '013618388', '013751243', '014802347', '014807038',
      '012774178', '013859862', '014792227', '014792908', '014803977', '014850981', '015046459', '015046493',
      '014791205', '010908229', '007942523', '011239103', '010724415', '015849521', '015850115', '015850119',
      '013697218', '012642764', '013719355', '200058054', '015874725', '219205262', '200058106', '015303143',
      '015327129', '016305129', '016663140', '015980779', '015981568', '016305128', '016598724', '016412229',
      '016616649', '016275690', '016274887', '016616809', '016731854', '016740020', '015327060', '015057751',
      '015681836', '015714295', '015521457', '015540916', '015692908', '015711311', '015520908', '015461429',
      '015716614', '013246801', '016505717', '016505733', '015891792', '013233289', '016235645', '015896090',
      '011175676', '015269104', '016501721', '015902237', '015896869', '015912640', '015896050', '015895320',
      '015896776', '015899952', '015430482', '015267236', '015893951', '015918059', '006418957', '014491781',
      '015891170', '015891176', '015891228', '015889614', '012552963', '013616382', '014384578', '015261807',
      '015261614', '015262206', '015270068', '015270073', '014603402', '014603415', '014603703', '014604592',
      '014607980', '000057560', '012669830', '015260749', '015269652', '015269775', '014545502', '015263570',
      '015263593', '015265596', '015261838', '002079096', '015122773', '015260764', '015260769', '015260777',
      '015262530', '015262855', '015264891', '015362728', '010919370', '011624992', '015262356', '015262510',
      '015262880', '015262888', '015265205', '015265360', '015260805', '015263513', '015264219', '013089510',
      '014603065', '015260748', '015260766', '015260786', '015260791', '015260811', '015261050', '015261053',
      '015262310', '015262507', '015262517', '015262526', '000545651', '002078253', '009900668', '014606475',
      '014977833', '015260785', '015264998', '015269251', '015265555', '014866770', '015260781', '015263372',
      '015265003', '015265319', '015263510', '015265359', '003016486', '013027671', '015055171', '015163313',
      '015261517', '015261941', '015264834', '015264964', '015269098', '015269671', '014605435', '015262460',
      '015263500', '015263503', '015263504', '015263506', '015263507', '015263606', '015265361', '011350895',
      '014601325', '015260709', '015263589', '015261755', '015262196', '015262191', '015262194', '015262201',
      '015262204', '014759237', '015262205', '015262211', '010637125', '001434780', '009247831', '013504066',
      '144250036', '144472842', '145449041', '014233476', '015260812', '015261548', '015264365', '145449047',
      '015262200', '012986478', '013456512', '015260813', '015161874', '015260820', '012882754', '015262197',
      '015263440', '015261482', '015261490', '015261852', '015262314', '015262490', '015263457', '015264647',
      '015265201', '008893534', '015173821', '015368809', '015368816', '015368824', '015412335', '015559892',
      '013545607', '015747930', '015570067', '015658385', '015584824', '015141669', '015577960', '015578012',
      '011826876', '015386357', '015891633', '015919807', '015571592', '015982188', '015372952', '015285612',
      '015369873', '015865355', '015374472', '016570187', '015232722', '014863828', '015558864', '015558787',
      '015558405', '015558243', '015491948', '015491968', '015491931', '015491847', '015491848', '015491851',
      '015492729', '015491838', '015491843', '015491845', '015515679', '015491881', '015539045', '015946368',
      '015539513', '015538871', '015539512', '015539884', '015684858', '015538932', '015539676', '015541025',
      '015538946', '015538966', '015539655', '015538926', '015535289', '015540237', '015539860', '015540363',
      '015798721', '015799290', '010647381', '010647382', '005372251', '015776762', '015743037', '015789546',
      '012856217', '010667713', '015794908', '015782390', '015786450', '015787079', '015794159', '015794160',
      '015794161', '015794164', '015794166', '015794342', '015796056', '015797087', '015797335', '015797342',
      '015797345', '015797832', '015795069', '015795656', '015798376', '011597840', '014379076', '015753567',
      '015798375', '015748130', '013981286', '014734526', '015747189', '015791059', '015797095', '015798794',
      '010351353', '001185519', '010219889', '010219891', '014381759', '014666498', '015073334', '015073335',
      '015073336', '015073339', '015239803', '015748203', '014714737', '015089028', '015790739', '014741483',
      '015797840', '011744657', '015790815', '007151939', '015781297', '014390994', '015868663', '014760273',
      '014737857', '015838720', '015838727', '016244011', '015856813', '015707927', '012918500', '014714845',
      '014389790', '011635805', '014292862', '015282975', '015349873', '013160170', '015119873', '012131135',
      '015259461', '014790520', '014801657', '015105384', '015347869', '012120922', '014809063', '015356539',
      '014792916', '015119961', '015120050', '014809059', '015120287', '013549427', '009845679', '015120309',
      '015276483', '001198479', '016706990', '014745771', '016156656', '016154799', '016158324', '016158404',
      '016158696', '016158724', '000569962', '015341961', '014650897', '007015228', '016408207', '016290770',
      '015227718', '015227728', '008122967', '006608711', '015452380', '016616438', '016420540', '016546301',
      '016612484', '005504082', '007161302', '007266131', '007266134', '014456143', '006008784', '001656354',
      '001723572', '007138254', '007138255', '015521774', '015306014', '015306121', '015306159', '015811586',
      '015393510', '016062991', '015980922', '016229604', '016226419', '016461726', '016756946', '016229603',
      '016226420', '016467702', '015848942', '015849801', '011984665', '015852580', '015851509', '015703595',
      '013939880', '014195484', '015265119', '015591776', '015591818', '015923060', '014773508', '015269255',
      '015486389', '015591765', '015450076', '014864449', '015899453', '015591477', '013228692', '015269662',
      '014505022', '002690045', '011150863', '015260778', '015262299', '015263501', '007872310', '015449645',
      '015244891', '015244902', '015244905', '015244908', '015020543', '015245273', '015192208', '015192221',
      '015450027', '015477293', '011792939', '015192261', '015192271', '015245330', '015245854', '015538069',
      '005425598', '011525473', '015173754', '015173853', '015192159', '015244766', '015244773', '015244776',
      '015244778', '015244781', '015244782', '015244783', '015244784', '015244793', '015409232', '015192217',
      '015198690', '015198693', '015244787', '015192141', '015198701', '012653678', '010656382', '015192260',
      '015192203', '015389028', '015192151', '015245367', '015192206', '015662953', '011787174', '015406117',
      '011750456', '014804003', '015179290', '015982190', '016152858', '016152678', '016151960', '015909517',
      '016684120', '012188575', '012271618', '013740238', '013741501', '013738064', '004545463', '011457162',
      '014963870', '014965834', '010710370', '011363988', '013485895', '014689932', '014964749', '015339370',
      '015340810', '015340812', '015337694', '015340817', '015640156', '003284805', '015064633', '015639071',
      '014542024', '015338210', '015338227', '015338671', '015338685', '015338689', '015338708', '015220705',
      '015339998', '015339249', '015339103', '015339613', '014559289', '015338694', '015338876', '015339602',
      '015339616', '013915653', '015638867', '015638871', '015338869', '015338873', '015339598', '015339605',
      '015338878', '015637104', '015625593', '015638895', '015770660', '015340827', '015338725', '015849256',
      '015853366', '015853447', '015703822', '015704740', '015703808', '015704659', '015709451', '001725548',
      '011866224', '015382852', '015381343', '015380326', '015381764', '015384293', '015380511', '015381881',
      '015399375', '015380834', '015380890', '015380893', '015381762', '015382143', '015381519', '015380284',
      '015381757', '015457778', '015381734', '015381743', '015378499', '015380282', '015380300', '015380764',
      '015381850', '015383661', '015419418', '015378450', '015380000', '015380960', '015384313', '015380966',
      '015383671', '015382226', '015383920', '015383101', '015378785', '015378986', '015380996', '015383199',
      '015383504', '015407209', '015383175', '015383089', '015603277', '015478734', '015550066', '123598466',
      '007320560', '015257427', '015591798', '015384375', '015384382', '016240698', '015229237', '015270688',
      '016062832', '013996798', '015297908', '015491840', '015530255', '015541805', '015541191', '015539879',
      '015539646', '015539725', '015539807', '015530289', '015540362', '016171523', '015766233', '015774541',
      '015786928', '015790229', '015147902', '015786258', '014390997', '015979280', '016413503', '016801677',
      '016801747', '015173279', '016741962', '013981281', '001580697', '014255408', '011240188', '015300945',
      '015150214', '015151009', '015151012', '015151038', '015357753', '015598887', '015168361', '016100088',
      '016643458', '016643462', '015152066', '015169213', '015120016', '013988484', '012119457', '015151075',
      '002033550', '014831019', '015151056', '015152060', '012771074', '014790790', '015170222', '015755930',
      '014953057', '015119945', '015150649', '015151111', '015152084', '015152137', '015171251', '010546117',
      '015577419', '011508323', '014809055', '014809062', '013578333', '002556042', '013432254', '015908126',
      '015206454', '015668977', '015670098', '015676128', '015520922', '015664021', '015672638', '015672807',
      '013264911', '015676651', '015678401', '015589973', '015889514', '015814056', '013235503', '013235504',
      '015398966', '014659934', '013284171', '013309612', '013237785', '015153346', '015153347', '011541682',
      '014801658', '015740573', '014807071', '015676758', '013132222', '001020798', '002632733', '005551764',
      '010912809', '010918032', '010952034', '011147131', '012171115', '012334981', '012811602', '012838190',
      '013486542', '014794207', '014794209', '014794615', '014801275', '015623855', '015630993', '010621017',
      '013443859', '014214222', '014790675', '014790894', '015220795', '015229366', '010977874', '011041048',
      '013465613', '015150678', '015597807', '001174788', '001856345', '014787397', '014795916', '014809000',
      '015556006', '002377589', '008062357', '015583678', '011360046', '012929573', '014304016', '015286271',
      '015451450', '012301847', '013748409', '014935998', '014787192', '015807614', '014809085', '007731428',
      '011741235', '013195222', '013705059', '004858954', '012825081', '014790726', '015464719', '001651960',
      '004044101', '014952346', '013542660', '015291610', '012322828', '015008973', '015046106', '014905334',
      '015908241', '015795012', '016151194', '015301909', '016177051', '011872557', '016167503', '013062111',
      '013110900', '014691237', '002221837', '004333375', '007621239', '013219921', '011702433', '014110066',
      '015167943', '013948220', '011618056', '013938951', '010136482', '014495573', '009062446', '015338799',
      '015338881', '016706917', '015926866', '016126412', '014701754', '015263003', '015263004', '015591810',
      '015591781', '015591783', '015591793', '015591692', '015606876', '015612215', '015591792', '015897062',
      '011285615', '015614004', '011285607', '011285608', '011285632', '012360285', '015243881', '012468273',
      '013805100', '013455497', '012205515', '015492091', '016229208', '016230003', '016229197', '013299731',
      '015671742', '011595737', '013284098', '014602670', '014705140', '011010594', '015724296', '015678752',
      '015679981', '013671836', '015815904', '015790971', '002883650', '014212120', '002286835', '014297860',
      '015793682', '003078856', '015437985', '014794436', '015551442', '001769405', '014810990', '014970359',
      '014970379', '015430705', '015754980', '015171626', '015165693', '015171102', '015171054', '012414130',
      '014669281', '002212139', '002778257', '002890232', '004919576', '005931117', '010828799', '012441226',
      '014794618', '014794576', '007287467', '014669004', '014672243', '014794581', '015555499', '010512364',
      '014790660', '014790783', '014792915', '014952208', '013179503', '013610235', '014430317', '014803978',
      '015119953', '015193986', '015597171', '015750865', '013382909', '014129724', '014669648', '013600937',
      '014501989', '014807797', '015047900', '012912814', '013383532', '013557505', '015152433', '014809068',
      '014804011', '014808757', '014808759', '014809795', '015670901', '014808996', '014792352', '009121847',
      '014792363', '011347759', '011164765', '010036706', '002783836', '015057672', '015662937', '014973559',
      '015558669', '013370288', '001133147', '015352343', '000680502', '002256993', '009338778', '016661133',
      '014666305', '015584062', '000712067', '007247222', '016250549', '011647906', '014138761', '011635972',
      '013043226', '015594863', '015690233', '015425382', '014655995', '011143894', '013606217', '014769101',
      '014769224', '014658386', '014314071', '014769103', '014770592', '013662836', '014769069', '014769140',
      '014774033', '014768683', '013237866', '014770601', '015319791', '014364959', '014769186', '011725982',
      '014770593', '012202083', '012515296', '013676738', '013442524', '013556028', '010853102', '005396920',
      '016213685', '016215737', '005290354', '015178630', '015100540', '014774775', '014209067', '014771311',
      '014528409', '011033268', '013899942', '013899003', '014769063', '014769068', '007750127', '014570221',
      '012150816', '014769814', '014659669', '014770283', '000366968', '000366976', '014286791', '014319398',
      '014770236', '014779616', '000501238', '014317457', '014317459', '005432410', '008228525', '013668134',
      '014314064', '014314066', '014769206', '015315950', '015317609', '013268021', '014304761', '014769004',
      '013228631', '014313108', '005392573', '014769734', '014782040', '013682891', '013682893', '014779743',
      '014779883', '014252020', '008797234', '001048551', '004766327', '008909450', '010962016', '010296544',
      '014769315', '014771173', '014781124', '014770634', '014769362', '005009523', '007312029', '005009273',
      '015237601', '015253986', '007227124', '003172484', '001775546', '005157025', '008802005', '005008380',
      '012029068', '002198023', '004371192', '005012135', '005012812', '005021092', '015960211', '015960225',
      '015960244', '014771177', '000995467', '014447651', '014447652', '009347989', '013660735', '014321908',
      '002360843', '014320852', '014506328', '013822822', '014803109', '001215937', '008121333', '012386442',
      '013578706', '013586994', '013705426', '013877158', '013598790', '014773852', '013380214', '013567105',
      '013567107', '013590122', '013677777', '000937322', '010123595', '010851019', '011036042', '011971473',
      '012349416', '013567108', '013658138', '013683048', '014061672', '014666312', '013626111', '013847863',
      '014314540', '014314603', '008929311', '013685160', '007386272', '001338696', '010922655', '012829578',
      '014222218', '014314546', '014764365', '013681531', '010386826', '010957044', '013660193', '013696549',
      '014701205', '016791834', '010698235', '013888806', '001389993', '004838221', '015137120', '015137130',
      '015137168', '012815887', '014792000', '012316654', '015246038', '015769469', '015341685', '014792012',
      '012680914', '013570846', '015150690', '015149561', '015273468', '012242304', '015072122', '011671137',
      '015034847', '015738076', '015127481', '015151811', '015192742', '012698882', '000826721', '016823914',
      '014581780', '015532258', '015532263', '014355558', '000433408', '015268951', '015330809', '015330814',
      '015515419', '015515422', '002666890', '005804441', '012164475', '002697383', '012810675', '016647167',
      '016647164', '016647171', '016882749', '016885449', '016603213', '016603214', '016603218', '016608356',
      '016874463', '016605177', '016605178', '016606554', '016608106', '016799076', '016602964', '014072627',
      '014441218', '016292449', '016170257', '016194449', '016175052', '016018514', '016169567', '016169820',
      '123282563', '011654596', '016598688')
    GROUP BY 
      niin
    """

    try:
        query_execution_id = run_athena_query(query, database)
        processed_results = process_results(query_execution_id)

        # Check if there are results before writing to a CSV file
        if not processed_results:
            print("No results found for the query.")
            return

        # Write results to a CSV file
        output_file = os.environ['TIMESTAMPED_FILENAME']
        with open(output_file, 'w', newline='') as file:
            writer = csv.DictWriter(file, fieldnames=processed_results[0].keys())
            writer.writeheader()
            writer.writerows(processed_results)

        print(f"Results have been written to {output_file}")

    except Exception as e:
        print(f"An error occurred: {str(e)}")


```

```{python eval=FALSE}

process_niins()

```
#### Post Process Query Results

##### Fix Decimal Function

```{r}

library(dplyr)
library(purrr)

# Define the function to find decimal placement
find_decimal_placement <- function(l, w, h, cubic_feet) {
  # Helper function to generate possible decimal placements for each number
  possible_values <- function(x) {
    str_x <- as.character(x)
    len_x <- nchar(str_x)
    sapply(1:len_x, function(i) {
      as.numeric(substring(str_x, 1, i) / 10^(len_x - i))
    })
  }
  
  # Generate all possible placements for each dimension
  possible_l <- possible_values(l)
  possible_w <- possible_values(w)
  possible_h <- possible_values(h)
  
  # Check each combination to see if it matches the target cubic feet
  for (l_val in possible_l) {
    for (w_val in possible_w) {
      for (h_val in possible_h) {
        result <- (l_val * w_val * h_val) / (12 * 12 * 12)
        if (abs(result - cubic_feet) < 1e-3) {
          return(c(l_val, w_val, h_val))
        }
      }
    }
  }
  return(c(NA, NA, NA))  # If no match is found
}

```

- #TODO: Add the function to the R script - Need to parse L, W, H, and Cubic Feet from the query results

```{r}

# Sample dataframe
df <- data.frame(
  l = c(250, 260),
  w = c(150, 140),
  h = c(145, 135),
  cubic_feet = c(3.146, 2.846)
)


df <- df %>%
  rowwise() %>%
  mutate(
    new_values = list(find_decimal_placement(l, w, h, cubic_feet)),
    l_new = new_values[1],
    w_new = new_values[2],
    h_new = new_values[3]
  ) %>%
  select(-new_values) %>%
  ungroup()


```

```{r warning=FALSE, message=FALSE}

options(scipen=999)

filename <- Sys.getenv("TIMESTAMPED_FILENAME")

file_path <- here(filename)

query_results <- read_csv(file_path, show_col_types = FALSE)

```


```{r warning=FALSE, message=FALSE}

query_results %<>% 
  select(1:3,6,7,10,12) %>% 
  mutate(niin = str_trim(niin),
         part_number = str_trim(part_number),
         cage_code = str_trim(cage_code),
         dss_weight = as.numeric(str_trim(dss_weight)),
         dss_cube = as.numeric(str_trim(dss_cube)),
         unit_pack_weight = as.numeric(str_trim(unit_pack_weight)),
         unit_pack_cube = as.numeric(str_trim(unit_pack_cube))
  ) %>% 
  mutate(across(where(is.numeric), ~ replace_na(., 0)))

write_csv(query_results, "dss_flis.csv")

```

### Step 2 - Missing Data Datasets

#### NIINs not returned from FLIS

```{r}

# get setdiff from query_results and df1
missing_data_df1 <- py$df1 %>% 
  anti_join(query_results, by = c("NIIN" = "niin")) %>%
  select(17:21) %>%
  distinct()
  

```

#### FLIS NIINs with missing DSS Weight or Cube

```{r}

niins_classix <- py$classix_niins

missing_data_flis <- query_results %>% 
  filter(dss_weight == 0 | dss_cube == 0) 

missing_data_flis

```

```{r}

missing_niins <- unique(c(missing_data_flis$niin, missing_data_df1$NIIN))

```

### Step 3 - Impute Missing Data (Keras Deep Learning Model)

```{r eval=FALSE, include=FALSE}

# Install Python, specifying the version if needed
# reticulate::install_python(version = "3.11")

```


```{r eval=FALSE, include=FALSE}
#install_keras(backend = "tensorflow")
```

#### Build Training Datasets

```{r}
niins_classix <- py$classix_niins
```

- 6,018 NIINs in the Class IX dataset (307 NIINs with missing FLIS dimensional data)

Train - 4,855
Test - 856
Impute on missing data: 307

- Remove NIINs with missing data

```{r}

missing_data_niins <- as_tibble(missing_niins) %>% 
  rename(NIIN = value)

# Semijoin with missing_data_nnins to select NIINs with missing data
df1_missing <- py$df1 %>% 
  semi_join(missing_data_niins, by = c("NIIN"="NIIN")) %>% 
  select(17:21) %>%
  distinct() %>% 
  rename(FSC = `FSC of Part Required`)

```

- Split the data into training and test sets

```{r}

non_missing_niins <- setdiff(niins_classix, missing_niins)

train_niins <- non_missing_niins[1:4855]
test_niins <- non_missing_niins[4856:5711]

train_data_niins <- as_tibble(train_niins) %>% 
  rename(NIIN = value)

test_data_niins <- as_tibble(test_niins) %>%
  rename(NIIN = value)

# Semijoin with missing_data_nnins to select NIINs with missing data
train_data <- py$df1 %>% 
  semi_join(train_data_niins, by = c("NIIN"="NIIN")) %>% 
  select(17:21) %>%
  distinct() %>% 
  rename(FSC = `FSC of Part Required`)


test_data <- py$df1 %>%
  semi_join(test_data_niins, by = c("NIIN"="NIIN")) %>% 
  select(17:21) %>%
  distinct() %>% 
  rename(FSC = `FSC of Part Required`)


train_data %<>% 
  left_join(query_results, by = c("NIIN" = "niin")) %>%
  select(FSC, NIIN, Nomenclature, UI, Unit_Price, dss_weight, dss_cube) 

test_data %<>% 
  left_join(query_results, by = c("NIIN" = "niin")) %>%
  select(FSC, NIIN, Nomenclature, UI, Unit_Price, dss_weight, dss_cube) 

```

#### Fit Model

```{r message=FALSE, warning=FALSE, eval=FALSE}

library(keras3)
library(readr)
library(dplyr)

# Normalize numeric input
train_data$Unit_Price <- scale(train_data$Unit_Price)[,1]

# Log-transform weight and cube columns to reduce skewness
train_data$dss_weight <- log1p(train_data$dss_weight)
train_data$dss_cube <- log1p(train_data$dss_cube)

# Repeat for test
test_data$Unit_Price <- scale(test_data$Unit_Price)[,1]
test_data$dss_weight <- log1p(test_data$dss_weight)
test_data$dss_cube <- log1p(test_data$dss_cube)


# Define TextVectorization layers for each textual input
max_features <- 10000 
max_length <- 10

fsc_vectorize <- layer_text_vectorization(
  max_tokens = max_features,
  output_mode = "int",
  output_sequence_length = max_length
)
niin_vectorize <- layer_text_vectorization(
  max_tokens = max_features,
  output_mode = "int",
  output_sequence_length = max_length
)
nomenclature_vectorize <- layer_text_vectorization(
  max_tokens = max_features,
  output_mode = "int",
  output_sequence_length = max_length
)
ui_vectorize <- layer_text_vectorization(
  max_tokens = max_features,
  output_mode = "int",
  output_sequence_length = max_length
)

# Adapt vectorization layers to specific columns in your data
fsc_vectorize %>% adapt(train_data$FSC)
niin_vectorize %>% adapt(train_data$NIIN)
nomenclature_vectorize %>% adapt(train_data$Nomenclature)
ui_vectorize %>% adapt(train_data$UI)

# Define input layers
fsc_input <- keras_input(shape = c(1), dtype = "string", name = 'fsc_input')
niin_input <- keras_input(shape = c(1), dtype = "string", name = 'niin_input')
nomenclature_input <- keras_input(shape = c(1), dtype = "string", name = 'nomenclature_input')
ui_input <- keras_input(shape = c(1), dtype = "string", name = 'ui_input')
unit_price_input <- keras_input(shape = c(1), dtype = "float32", name = 'unit_price_input')

# Vectorize and embed the text inputs
embedding_dim <- 10

fsc_embedding <- fsc_input %>%
  fsc_vectorize() %>%
  layer_embedding(input_dim = max_features + 1, output_dim = embedding_dim) %>%
  layer_global_average_pooling_1d()

niin_embedding <- niin_input %>%
  niin_vectorize() %>%
  layer_embedding(input_dim = max_features + 1, output_dim = embedding_dim) %>%
  layer_global_average_pooling_1d()

nomenclature_embedding <- nomenclature_input %>%
  nomenclature_vectorize() %>%
  layer_embedding(input_dim = max_features + 1, output_dim = embedding_dim) %>%
  layer_global_average_pooling_1d()

ui_embedding <- ui_input %>%
  ui_vectorize() %>%
  layer_embedding(input_dim = max_features + 1, output_dim = embedding_dim) %>%
  layer_global_average_pooling_1d()

# Concatenate all embeddings and numeric input
merged <- layer_concatenate(list(fsc_embedding, niin_embedding, nomenclature_embedding, ui_embedding, unit_price_input))

# Shared dense layers
shared_dense <- merged %>%
  layer_dense(units = 64, activation = 'relu', kernel_regularizer = regularizer_l2(0.05)) %>%
  layer_batch_normalization() %>%
  layer_dropout(rate = 0.25) %>%
  layer_dense(units = 32, activation = 'relu', kernel_regularizer = regularizer_l2(0.05)) %>%
  layer_batch_normalization() %>%
  layer_dropout(rate = 0.25)


# Output layers with ReLU activation for both weight and cube outputs to ensure non-negative values
weight_output <- shared_dense %>%
  layer_dense(units = 1, activation = 'relu', name = 'weight_output')

cube_output <- shared_dense %>%
  layer_dense(units = 1, activation = 'relu', name = 'cube_output')

# Create and compile the model
model <- keras_model(
  inputs = list(fsc_input, niin_input, nomenclature_input, ui_input, unit_price_input),
  outputs = list(weight_output, cube_output)
)

# Compile model with separate loss functions and metrics for each output
model %>% compile(
  optimizer = optimizer_adam(learning_rate = 0.00001),
  loss = list(weight_output = 'mse', cube_output = 'mse'),
  metrics = list(weight_output = 'mae', cube_output = 'mae')
)

# Model summary for verification
summary(model)

```


```{r message=FALSE, warning=FALSE}

# Compile the model
model %>% compile(
  optimizer = optimizer_adam(),
  loss = list(weight_output = 'mean_squared_error', 
              cube_output = 'mean_squared_error'),
  metrics = list(weight_output = 'mean_absolute_error',
                 cube_output = 'mean_absolute_error')
)

# Print model summary
summary(model)

```


```{r message=FALSE, warning=FALSE, eval=FALSE}
# Prepare data for training and validation
set.seed(1997)  

# Prepare training inputs
train_inputs <- list(
  fsc_input = as.matrix(train_data$FSC),
  niin_input = as.matrix(train_data$NIIN),
  nomenclature_input = as.matrix(train_data$Nomenclature),
  ui_input = as.matrix(train_data$UI),
  unit_price_input = as.matrix(train_data$Unit_Price)
)

# Prepare validation inputs
test_inputs <- list(
  fsc_input = as.matrix(test_data$FSC),
  niin_input = as.matrix(test_data$NIIN),
  nomenclature_input = as.matrix(test_data$Nomenclature),
  ui_input = as.matrix(test_data$UI),
  unit_price_input = as.matrix(test_data$Unit_Price)
)

# Prepare training outputs
train_outputs <- list(
  weight_output = as.matrix(train_data$dss_weight),
  cube_output = as.matrix(train_data$dss_cube)
)

# Prepare validation outputs
test_outputs <- list(
  weight_output = as.matrix(test_data$dss_weight),
  cube_output = as.matrix(test_data$dss_cube)
)

# Define early stopping callback
early_stopping <- callback_early_stopping(
  monitor = "val_loss",
  patience = 25,  # Number of epochs with no improvement after which training will be stopped
  restore_best_weights = TRUE  # Restores model weights from the epoch with the best value of the monitored quantity
)

# Define model checkpoint callback to save the best model
checkpoint <- callback_model_checkpoint(
  filepath = "best_model.keras",
  save_best_only = TRUE,
  monitor = "val_loss",
  mode = "min"
)

# Fit the model with early stopping and model checkpoint
history <- model %>% fit(
  x = train_inputs,
  y = train_outputs,
  epochs = 50,
  batch_size = 5,
  validation_data = list(test_inputs, test_outputs),
  callbacks = list(early_stopping, checkpoint)
)
```


```{r message=FALSE, warning=FALSE, eval=FALSE}

# load the best model
best_model <- load_model("best_model.keras")

```

```{r eval=FALSE}

history

```

Final epoch:
-cube_output_loss: 0.01921
-cube_output_mean_absolute_error: 0.1539
-loss: 0.02864
-weight_output_loss: 0.008539
-weight_output_mean_absolute_error: 0.1585
-val_cube_output_loss: 0.2148
-val_cube_output_mean_absolute_error: 0.16
-val_loss: 0.2651
-val_weight_output_loss: 0.05114
-val_weight_output_mean_absolute_error: 0.3696 


![Model Training](images/dim_data_model_training.png)

#### Model Predictions

- For CatBoost Comparison

```{r}

# Load the best model
best_model <- load_model("best_model.keras")

# Convert inputs to matrices with the correct data type
test_inputs <- list(
  fsc_input = as.matrix(as.character(test_data$FSC)),
  niin_input = as.matrix(as.character(test_data$NIIN)),
  nomenclature_input = as.matrix(as.character(test_data$Nomenclature)),
  ui_input = as.matrix(as.character(test_data$UI)),
  unit_price_input = as.matrix(as.numeric(test_data$Unit_Price))
)

# Make predictions
keras_predictions <- predict(best_model, test_inputs)

# Convert predictions to dataframe
keras_predictions_df <- data.frame(
  dss_weight = keras_predictions[[1]],
  dss_cube = keras_predictions[[2]]
)

# Find the smallest non-zero value in the dss_weight column
non_zero_min <- min(predictions_df$dss_weight[predictions_df$dss_weight > 0])

# Replace zero values with the smallest non-zero value
keras_predictions_df$dss_weight <- ifelse(keras_predictions_df$dss_weight == 0, non_zero_min, keras_predictions_df$dss_weight)


```


```{r message=FALSE, warning=FALSE, eval=FALSE}

df1_missing$Unit_Price <- scale(df1_missing$Unit_Price)[,1]

# Prepare new input for prediction
test_inputs <- list(
  fsc_input = as.matrix(as.character(df1_missing$FSC)),
  niin_input = as.matrix(as.character(df1_missing$NIIN)),
  nomenclature_input = as.matrix(as.character(df1_missing$Nomenclature)),
  ui_input = as.matrix(as.character(df1_missing$UI)),
  unit_price_input = as.matrix(as.numeric(df1_missing$Unit_Price))
)

# Make predictions
predictions <- best_model %>% predict(test_inputs)

# Convert predictions to dataframe
predictions_df <- data.frame(
  dss_weight = predictions[[1]],
  dss_cube = predictions[[2]]
)

# Find the smallest non-zero value in the dss_weight column
non_zero_min <- min(predictions_df$dss_weight[predictions_df$dss_weight > 0])

# Replace zero values with the smallest non-zero value
predictions_df$dss_weight <- ifelse(predictions_df$dss_weight == 0, non_zero_min, predictions_df$dss_weight)

```

```{r eval=FALSE}

# Semijoin with missing_data_nnins to select NIINs with missing data
df1_missing <- py$df1 %>% 
  semi_join(missing_data_niins, by = c("NIIN"="NIIN")) %>% 
  select(17:21) %>%
  distinct() %>% 
  rename(FSC = `FSC of Part Required`)

dim_data_imputed <- df1_missing %>% 
  bind_cols(predictions_df) %>% 
  mutate(Imputed = "Yes")

dim_data_imputed

```


### Step 4 - Impute Missing Data (CatBoost Model)

```{r eval=FALSE, include=FALSE}

#py_install("catboost")
#py_install("scikit-learn")

```

#### Build Training Datasets

```{r eval=FALSE, include=FALSE}

# Semijoin with missing_data_nins to select NIINs with missing data
train_data <- py$df1 %>% 
  semi_join(train_data_niins, by = c("NIIN"="NIIN")) %>% 
  select(17:21) %>%
  distinct() %>% 
  rename(FSC = `FSC of Part Required`) %>% 
  left_join(query_results, by = c("NIIN" = "niin")) %>% 
  select(FSC, NIIN, Nomenclature, UI, Unit_Price, dss_weight, dss_cube) 


test_data <- py$df1 %>%
  semi_join(test_data_niins, by = c("NIIN"="NIIN")) %>% 
  select(17:21) %>%
  distinct() %>% 
  rename(FSC = `FSC of Part Required`) %>% 
  left_join(query_results, by = c("NIIN" = "niin")) %>% 
  select(FSC, NIIN, Nomenclature, UI, Unit_Price, dss_weight, dss_cube) 

```

```{python}

X_train.columns

```

```{python}

import pandas as pd
import numpy as np
from catboost import Pool, CatBoostRegressor

X_train = r.train_data
X_test = r.test_data
new_data = r.missing_data_df1


# Define feature columns
feature_columns = ['FSC', 'NIIN', 'Nomenclature', 'UI', 'Unit_Price']
text_features = ['Nomenclature']
cat_features = ['FSC','NIIN','UI']

# Prepare train and test data
X_train_features = X_train[feature_columns]
X_test_features = X_test[feature_columns]
y_train_weight = X_train['dss_weight']
y_test_weight = X_test['dss_weight']
y_train_cube = X_train['dss_cube']
y_test_cube = X_test['dss_cube']


def fit_catboost_regressor(X_train, X_test, y_train, y_test, catboost_params={}, verbose=100):
    learn_pool = Pool(
        X_train, 
        y_train, 
        cat_features=cat_features,
        text_features=text_features,
        feature_names=list(X_train)
    )
    test_pool = Pool(
        X_test, 
        y_test, 
        cat_features=cat_features,
        text_features=text_features,
        feature_names=list(X_train)
    )
    
    catboost_default_params = {
        'iterations': 1000,
        'learning_rate': 0.03,
        'eval_metric': 'RMSE',
    }
    
    catboost_default_params.update(catboost_params)
    
    model = CatBoostRegressor(**catboost_default_params)
    model.fit(learn_pool, eval_set=test_pool, verbose=verbose)

    return model
  
```

#### Fit Models

```{python}

# Model for dss_weight
weight_model = fit_catboost_regressor(X_train, X_test, y_train_weight, y_test_weight)

```


```{python}

# Model for dss_cube
cube_model = fit_catboost_regressor(X_train, X_test, y_train_cube, y_test_cube)

```

#### Model Predictions

```{python}

from sklearn.metrics import mean_squared_error, r2_score
import numpy as np

# Make predictions
weight_predictions = weight_model.predict(X_test)
cube_predictions = cube_model.predict(X_test)

```

### Evaluate Model Predictions

```{r}

library(Metrics)

# Assuming these objects are already available
catboost_predictions_weight <- py$weight_predictions
catboost_predictions_cube <- py$cube_predictions
keras_predictions_weight <- keras_predictions_df$dss_weight
keras_predictions_cube <- keras_predictions_df$dss_cube
true_weight <- test_data$dss_weight
true_cube <- test_data$dss_cube

# Calculate RMSE and R2 for Keras and CatBoost models for weight predictions
rmse_keras_weight <- rmse(true_weight, keras_predictions_weight)
r2_keras_weight <- mae(keras_predictions_weight, true_weight)

rmse_catboost_weight <- rmse(true_weight, catboost_predictions_weight)
r2_catboost_weight <- mae(catboost_predictions_weight, true_weight)

# Calculate RMSE and R2 for Keras and CatBoost models for cube predictions
rmse_keras_cube <- rmse(true_cube, keras_predictions_cube)
r2_keras_cube <- mae(keras_predictions_cube, true_cube)

rmse_catboost_cube <- rmse(true_cube, catboost_predictions_cube)
r2_catboost_cube <- mae(catboost_predictions_cube, true_cube)

# Print metrics comparison
cat("Weight Predictions:\n")
cat("Keras - RMSE:", rmse_keras_weight, "MAE:", r2_keras_weight, "\n")
cat("CatBoost - RMSE:", rmse_catboost_weight, "MAE:", r2_catboost_weight, "\n\n")

cat("Cube Predictions:\n")
cat("Keras - RMSE:", rmse_keras_cube, "MAE:", r2_keras_cube, "\n")
cat("CatBoost - RMSE:", rmse_catboost_cube, "MAE:", r2_catboost_cube, "\n")

```


```{r}

library(plotly)

# Create a data frame for plotting the comparison
plot_data <- data.frame(
  Index = 1:length(true_weight),
  True_Weight = true_weight,
  Keras_Weight = keras_predictions_weight,
  CatBoost_Weight = catboost_predictions_weight,
  True_Cube = true_cube,
  Keras_Cube = keras_predictions_cube,
  CatBoost_Cube = catboost_predictions_cube
)

# Plot comparison of weight predictions
p1 <- plot_ly(plot_data, x = ~Index) %>%
  add_lines(y = ~True_Weight, name = 'True Weight', line = list(color = 'black', dash = 'dash')) %>%
  add_markers(y = ~Keras_Weight, name = 'Keras Weight', marker = list(color = 'blue', size = 3)) %>%
  add_markers(y = ~CatBoost_Weight, name = 'CatBoost Weight', marker = list(color = 'orange', size = 3)) %>%
  layout(title = "Weight Predictions Comparison",
         xaxis = list(title = "Index"),
         yaxis = list(title = "Predicted Weight"),
         legend = list(x = 0.1, y = 0.9))

# Plot comparison of cube predictions
p2 <- plot_ly(plot_data, x = ~Index) %>%
  add_lines(y = ~True_Cube, name = 'True Cube', line = list(color = 'black', dash = 'dash')) %>%
  add_markers(y = ~Keras_Cube, name = 'Keras Cube', marker = list(color = 'blue', size = 3)) %>%
  add_markers(y = ~CatBoost_Cube, name = 'CatBoost Cube', marker = list(color = 'orange', size = 3)) %>%
  layout(title = "Cube Predictions Comparison",
         xaxis = list(title = "Index"),
         yaxis = list(title = "Predicted Cube"),
         legend = list(x = 0.1, y = 0.9))

# Display the plots
p1
p2

```

### Final Dataset

```{r}

df1 <- py$df1

# Step 1: Rename the `FSC of Part Required` column in `df1`
df1 <- df1 %>%
  rename(FSC = `FSC of Part Required`)

# Initial joins with missing_data_flis and query_results
class_ix_dimensional_data <- df1 %>%
  left_join(missing_data_flis, by = c("NIIN" = "niin"), suffix = c("", "_flis")) %>%
  left_join(query_results, by = c("NIIN" = "niin"), suffix = c("", "_query")) %>%
  mutate(
    part_number = coalesce(part_number, part_number_query, "Not in FLIS"),
    cage_code = coalesce(cage_code, cage_code_query, "Not in FLIS"),
    dss_weight = coalesce(dss_weight, dss_weight_query),
    dss_cube = coalesce(dss_cube, dss_cube_query),
    unit_pack_weight = if_else(unit_pack_weight == 0 | is.na(unit_pack_weight), 
                               coalesce(dss_weight, dss_weight_query), 
                               unit_pack_weight),
    unit_pack_cube = if_else(unit_pack_cube == 0 | is.na(unit_pack_cube), 
                             coalesce(dss_cube, dss_cube_query), 
                             unit_pack_cube)
  ) %>%
  select(FSC, NIIN, Nomenclature, part_number, cage_code, UI, Unit_Price, dss_weight, dss_cube, unit_pack_weight, unit_pack_cube) %>%
  distinct()

# Step 2: Use dim_data_imputed to fill in any remaining missing `dss_weight`, `dss_cube`, `unit_pack_weight`, and `unit_pack_cube`
class_ix_dimensional_data %<>%
  left_join(dim_data_imputed %>% 
              select(NIIN, dss_weight, dss_cube, Imputed), by = "NIIN", suffix = c("", "_imputed")) %>%
  mutate(
    dss_weight = if_else(dss_weight == 0 | is.na(dss_weight), dss_weight_imputed, dss_weight),
    dss_cube = if_else(dss_cube == 0 | is.na(dss_cube), dss_cube_imputed, dss_cube),
    unit_pack_weight = if_else(unit_pack_weight == 0 | is.na(unit_pack_weight), 
                               coalesce(dss_weight_imputed, dss_weight), 
                               unit_pack_weight),
    unit_pack_cube = if_else(unit_pack_cube == 0 | is.na(unit_pack_cube), 
                             coalesce(dss_cube_imputed, dss_cube), 
                             unit_pack_cube),
    Imputed = if_else(is.na(Imputed), "No", Imputed)) %>%
  select(-dss_weight_imputed, -dss_cube_imputed) %>%
  # format all numeric columns to 3 decimal places
  mutate(across(where(is.numeric), ~ round(., 3))) %>%
  distinct()

# Display the final result
class_ix_dimensional_data

```

```{r eval=FALSE}

write_csv(class_ix_dimensional_data, "classix_dimensional_data.csv")

```